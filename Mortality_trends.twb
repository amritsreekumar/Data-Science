<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20181.18.0510.1418                               -->
<workbook source-build='2018.1.1 (20181.18.0510.1418)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Data (mortalityrates)' inline='true' name='federated.161s2oj0jtb3gd1a6bytg0myrxqf' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='mortalityrates' name='excel-direct.1lminzr1vxudjh1chy39k0isww4p'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/macbook/Desktop/mortalityrates.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='african countries' name='excel-direct.12yn0pf1btutlr1383hcf1dmy61q'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/macbook/Desktop/african countries.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='europe and australia' name='excel-direct.0ldl3ip0dhmv5n17ido6v0rb3csz'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/macbook/Desktop/europe and australia.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1lminzr1vxudjh1chy39k0isww4p' name='All countries' table='[Data$]' type='table'>
          <columns gridOrigin='A1:BH265:no:A1:BH265:0' header='yes' outcome='2'>
            <column datatype='string' name='Country Name' ordinal='0' />
            <column datatype='string' name='Country Code' ordinal='1' />
            <column datatype='string' name='Indicator Name' ordinal='2' />
            <column datatype='real' name='1960' ordinal='3' />
            <column datatype='real' name='1961' ordinal='4' />
            <column datatype='real' name='1962' ordinal='5' />
            <column datatype='real' name='1963' ordinal='6' />
            <column datatype='real' name='1964' ordinal='7' />
            <column datatype='real' name='1965' ordinal='8' />
            <column datatype='real' name='1966' ordinal='9' />
            <column datatype='real' name='1967' ordinal='10' />
            <column datatype='real' name='1968' ordinal='11' />
            <column datatype='real' name='1969' ordinal='12' />
            <column datatype='real' name='1970' ordinal='13' />
            <column datatype='real' name='1971' ordinal='14' />
            <column datatype='real' name='1972' ordinal='15' />
            <column datatype='real' name='1973' ordinal='16' />
            <column datatype='real' name='1974' ordinal='17' />
            <column datatype='real' name='1975' ordinal='18' />
            <column datatype='real' name='1976' ordinal='19' />
            <column datatype='real' name='1977' ordinal='20' />
            <column datatype='real' name='1978' ordinal='21' />
            <column datatype='real' name='1979' ordinal='22' />
            <column datatype='real' name='1980' ordinal='23' />
            <column datatype='real' name='1981' ordinal='24' />
            <column datatype='real' name='1982' ordinal='25' />
            <column datatype='real' name='1983' ordinal='26' />
            <column datatype='real' name='1984' ordinal='27' />
            <column datatype='real' name='1985' ordinal='28' />
            <column datatype='real' name='1986' ordinal='29' />
            <column datatype='real' name='1987' ordinal='30' />
            <column datatype='real' name='1988' ordinal='31' />
            <column datatype='real' name='1989' ordinal='32' />
            <column datatype='real' name='1990' ordinal='33' />
            <column datatype='real' name='1991' ordinal='34' />
            <column datatype='real' name='1992' ordinal='35' />
            <column datatype='real' name='1993' ordinal='36' />
            <column datatype='real' name='1994' ordinal='37' />
            <column datatype='real' name='1995' ordinal='38' />
            <column datatype='real' name='1996' ordinal='39' />
            <column datatype='real' name='1997' ordinal='40' />
            <column datatype='real' name='1998' ordinal='41' />
            <column datatype='real' name='1999' ordinal='42' />
            <column datatype='real' name='2000' ordinal='43' />
            <column datatype='real' name='2001' ordinal='44' />
            <column datatype='real' name='2002' ordinal='45' />
            <column datatype='real' name='2003' ordinal='46' />
            <column datatype='real' name='2004' ordinal='47' />
            <column datatype='real' name='2005' ordinal='48' />
            <column datatype='real' name='2006' ordinal='49' />
            <column datatype='real' name='2007' ordinal='50' />
            <column datatype='real' name='2008' ordinal='51' />
            <column datatype='real' name='2009' ordinal='52' />
            <column datatype='real' name='2010' ordinal='53' />
            <column datatype='real' name='2011' ordinal='54' />
            <column datatype='real' name='2012' ordinal='55' />
            <column datatype='real' name='2013' ordinal='56' />
            <column datatype='real' name='2014' ordinal='57' />
            <column datatype='real' name='2015' ordinal='58' />
            <column datatype='real' name='2016' ordinal='59' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Code]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Indicator Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Indicator Name]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>Indicator Name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1960</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1960]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>1960</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1961</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1961]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>1961</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1962</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1962]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>1962</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1963</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1963]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>1963</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1964</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1964]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>1964</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1965</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1965]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>1965</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1966</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1966]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>1966</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1967</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1967]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>1967</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1968</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1968]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>1968</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1969</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1969]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>1969</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1970</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1970]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>1970</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1971</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1971]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>1971</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1972</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1972]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>1972</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1973</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1973]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>1973</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1974</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1974]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>1974</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1975</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1975]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>1975</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1976</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1976]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>1976</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1977</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1977]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>1977</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1978</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1978]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>1978</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1979</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1979]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>1979</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1980</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1980]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>1980</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1981</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1981]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>1981</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1982</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1982]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>1982</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1983</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1983]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>1983</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1984</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1984]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>1984</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1985</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1985]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>1985</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1986</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1986]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>1986</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1987</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1987]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>1987</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1988</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1988]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>1988</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1989</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1989]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>1989</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1990</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1990]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>1990</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1991</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1991]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>1991</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1992</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1992]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>1992</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1993</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1993]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>1993</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1994</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1994]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>1994</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1995</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1995]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>1995</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1996</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1996]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>1996</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1997</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1997]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>1997</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1998</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1998]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>1998</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1999</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1999]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>1999</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2000]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>2000</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2001</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2001]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>2001</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2002</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2002]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>2002</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2003</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2003]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>2003</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2004</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2004]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>2004</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2005</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2005]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>2005</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2006</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2006]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>2006</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2007</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2007]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>2007</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2008</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2008]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>2008</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2009</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2009]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>2009</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2010]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>2010</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2011</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2011]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>2011</remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2012</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2012]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>2012</remote-alias>
            <ordinal>55</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2013</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2013]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>2013</remote-alias>
            <ordinal>56</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2014</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2014]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>2014</remote-alias>
            <ordinal>57</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2015</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2015]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>2015</remote-alias>
            <ordinal>58</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2016</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2016]</local-name>
            <parent-name>[All countries]</parent-name>
            <remote-alias>2016</remote-alias>
            <ordinal>59</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[All countries]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:BH265:no:A1:BH265:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[1960]' role='measure' type='quantitative' />
      <column datatype='real' name='[1961]' role='measure' type='quantitative' />
      <column datatype='real' name='[1962]' role='measure' type='quantitative' />
      <column datatype='real' name='[1963]' role='measure' type='quantitative' />
      <column datatype='real' name='[1964]' role='measure' type='quantitative' />
      <column datatype='real' name='[1965]' role='measure' type='quantitative' />
      <column datatype='real' name='[1966]' role='measure' type='quantitative' />
      <column datatype='real' name='[1967]' role='measure' type='quantitative' />
      <column datatype='real' name='[1968]' role='measure' type='quantitative' />
      <column datatype='real' name='[1969]' role='measure' type='quantitative' />
      <column datatype='real' name='[1970]' role='measure' type='quantitative' />
      <column datatype='real' name='[1971]' role='measure' type='quantitative' />
      <column datatype='real' name='[1972]' role='measure' type='quantitative' />
      <column datatype='real' name='[1973]' role='measure' type='quantitative' />
      <column datatype='real' name='[1974]' role='measure' type='quantitative' />
      <column datatype='real' name='[1975]' role='measure' type='quantitative' />
      <column datatype='real' name='[1976]' role='measure' type='quantitative' />
      <column datatype='real' name='[1977]' role='measure' type='quantitative' />
      <column datatype='real' name='[1978]' role='measure' type='quantitative' />
      <column datatype='real' name='[1979]' role='measure' type='quantitative' />
      <column datatype='real' name='[1980]' role='measure' type='quantitative' />
      <column datatype='real' name='[2000]' role='measure' type='quantitative' />
      <column caption='Percentage decrease60-80' datatype='real' name='[Calculation_477170460220043275]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='((SUM([1960])-SUM([1980]))/SUM([1960]))*100' />
      </column>
      <column caption='Percentage decrease80-2000' datatype='real' name='[Calculation_620159748490080258]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='((SUM([1980])-SUM([2000]))/SUM([1980]))*100' />
      </column>
      <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[1960]' derivation='Avg' name='[avg:1960:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_477170460220043275]' derivation='User' name='[diff:usr:Calculation_477170460220043275:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='CellInPane' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_477170460220043275]' derivation='User' name='[diff:usr:Calculation_477170460220043275:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[1960]' derivation='Sum' name='[pcto:sum:1960:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='ColumnInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[1960]' derivation='Sum' name='[pcto:sum:1960:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='RowInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[1961]' derivation='Sum' name='[pcto:sum:1961:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='ColumnInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[1961]' derivation='Sum' name='[pcto:sum:1961:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='RowInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[1962]' derivation='Sum' name='[pcto:sum:1962:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='ColumnInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[1962]' derivation='Sum' name='[pcto:sum:1962:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='RowInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[1963]' derivation='Sum' name='[pcto:sum:1963:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='ColumnInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[1963]' derivation='Sum' name='[pcto:sum:1963:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='RowInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[1964]' derivation='Sum' name='[pcto:sum:1964:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='ColumnInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[1964]' derivation='Sum' name='[pcto:sum:1964:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='RowInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[1965]' derivation='Sum' name='[pcto:sum:1965:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='ColumnInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[1965]' derivation='Sum' name='[pcto:sum:1965:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='RowInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[1966]' derivation='Sum' name='[pcto:sum:1966:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='ColumnInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[1966]' derivation='Sum' name='[pcto:sum:1966:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='RowInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[1967]' derivation='Sum' name='[pcto:sum:1967:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='ColumnInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[1967]' derivation='Sum' name='[pcto:sum:1967:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='RowInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[1968]' derivation='Sum' name='[pcto:sum:1968:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='ColumnInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[1968]' derivation='Sum' name='[pcto:sum:1968:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='RowInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[1969]' derivation='Sum' name='[pcto:sum:1969:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='ColumnInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[1969]' derivation='Sum' name='[pcto:sum:1969:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='RowInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[1970]' derivation='Sum' name='[pcto:sum:1970:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='ColumnInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[1970]' derivation='Sum' name='[pcto:sum:1970:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='RowInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[1960]' derivation='Sum' name='[sum:1960:qk]' pivot='key' type='quantitative' />
      <column-instance column='[1961]' derivation='Sum' name='[sum:1961:qk]' pivot='key' type='quantitative' />
      <column-instance column='[1962]' derivation='Sum' name='[sum:1962:qk]' pivot='key' type='quantitative' />
      <column-instance column='[1963]' derivation='Sum' name='[sum:1963:qk]' pivot='key' type='quantitative' />
      <column-instance column='[1964]' derivation='Sum' name='[sum:1964:qk]' pivot='key' type='quantitative' />
      <column-instance column='[1965]' derivation='Sum' name='[sum:1965:qk]' pivot='key' type='quantitative' />
      <column-instance column='[1966]' derivation='Sum' name='[sum:1966:qk]' pivot='key' type='quantitative' />
      <column-instance column='[1967]' derivation='Sum' name='[sum:1967:qk]' pivot='key' type='quantitative' />
      <column-instance column='[1968]' derivation='Sum' name='[sum:1968:qk]' pivot='key' type='quantitative' />
      <column-instance column='[1969]' derivation='Sum' name='[sum:1969:qk]' pivot='key' type='quantitative' />
      <column-instance column='[1970]' derivation='Sum' name='[sum:1970:qk]' pivot='key' type='quantitative' />
      <column-instance column='[1971]' derivation='Sum' name='[sum:1971:qk]' pivot='key' type='quantitative' />
      <column-instance column='[1972]' derivation='Sum' name='[sum:1972:qk]' pivot='key' type='quantitative' />
      <column-instance column='[1973]' derivation='Sum' name='[sum:1973:qk]' pivot='key' type='quantitative' />
      <column-instance column='[1974]' derivation='Sum' name='[sum:1974:qk]' pivot='key' type='quantitative' />
      <column-instance column='[1975]' derivation='Sum' name='[sum:1975:qk]' pivot='key' type='quantitative' />
      <column-instance column='[1976]' derivation='Sum' name='[sum:1976:qk]' pivot='key' type='quantitative' />
      <column-instance column='[1977]' derivation='Sum' name='[sum:1977:qk]' pivot='key' type='quantitative' />
      <column-instance column='[1978]' derivation='Sum' name='[sum:1978:qk]' pivot='key' type='quantitative' />
      <column-instance column='[1979]' derivation='Sum' name='[sum:1979:qk]' pivot='key' type='quantitative' />
      <column-instance column='[1980]' derivation='Sum' name='[sum:1980:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2000]' derivation='Sum' name='[sum:2000:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_477170460220043275]' derivation='User' name='[usr:Calculation_477170460220043275:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.325052' measure-ordering='alphabetic' measure-percentage='0.674948' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Middle East &amp; North Africa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Caribbean small states&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central Europe and the Baltics&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Latin America &amp; Caribbean&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sub-Saharan Africa (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Korea, Dem. People’s Rep.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Late-demographic dividend&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Not classified&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Arab World&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Early-demographic dividend&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;IDA total&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Other small states&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Heavily indebted poor countries (HIPC)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Post-demographic dividend&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Asia (IDA &amp; IBRD)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;East Asia &amp; Pacific&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Euro area&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;St. Martin (French part)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Venezuela, RB&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Europe &amp; Central Asia (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Macedonia, FYR&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Middle East &amp; North Africa (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;East Asia &amp; Pacific (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pacific island small states&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;IDA &amp; IBRD total&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Virgin Islands (U.S.)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fragile and conflict affected situations&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran, Islamic Rep.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Latin America &amp; Caribbean (excluding high income)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Macao SAR, China&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;OECD members&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Latin America &amp; the Caribbean (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;IDA only&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Korea, Rep.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Small states&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sub-Saharan Africa (excluding high income)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Congo, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hong Kong SAR, China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St. Lucia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Low &amp; middle income&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Europe &amp; Central Asia (excluding high income)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;IDA blend&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lao PDR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Least developed countries: UN classification&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pre-demographic dividend&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Congo, Rep.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;East Asia &amp; Pacific (excluding high income)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Europe &amp; Central Asia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Middle income&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;IBRD only&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Micronesia, Fed. Sts.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Egypt, Arab Rep.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Middle East &amp; North Africa (excluding high income)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yemen, Rep.&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[pcto:sum:1968:qk:1]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[pcto:sum:1968:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[sum:1968:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[avg:1960:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[diff:usr:Calculation_477170460220043275:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[diff:usr:Calculation_477170460220043275:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[pcto:sum:1960:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[pcto:sum:1960:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[sum:1960:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_477170460220043275:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[pcto:sum:1964:qk:1]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[pcto:sum:1964:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[sum:1964:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[sum:1972:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[pcto:sum:1969:qk:1]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[pcto:sum:1969:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[sum:1969:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[pcto:sum:1965:qk:1]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[pcto:sum:1965:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[sum:1965:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[sum:1978:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[pcto:sum:1961:qk:1]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[pcto:sum:1961:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[sum:1961:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[sum:1976:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[pcto:sum:1966:qk:1]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[pcto:sum:1966:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[sum:1966:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[sum:1973:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[sum:1974:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[sum:1977:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[sum:1979:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[pcto:sum:1970:qk:1]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[pcto:sum:1970:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[sum:2000:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[sum:1970:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[pcto:sum:1967:qk:1]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[pcto:sum:1967:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[sum:1967:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[pcto:sum:1962:qk:1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[pcto:sum:1962:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[sum:1962:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[sum:1980:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[sum:1975:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[sum:1971:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_47287801348087813:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_477170460218281988:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[pcto:sum:1963:qk:1]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[pcto:sum:1963:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[sum:1963:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='1960-70'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (mortalityrates)' name='federated.161s2oj0jtb3gd1a6bytg0myrxqf' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.161s2oj0jtb3gd1a6bytg0myrxqf'>
            <column datatype='real' name='[1960]' role='measure' type='quantitative' />
            <column datatype='real' name='[1980]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[1960]' derivation='Sum' name='[sum:1960:qk]' pivot='key' type='quantitative' />
            <column-instance column='[1980]' derivation='Sum' name='[sum:1980:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[sum:1960:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[sum:1980:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[sum:1960:qk]&quot;</bucket>
              <bucket>&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[sum:1980:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country Name:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;American Samoa&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Andorra&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bermuda&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;British Virgin Islands&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cayman Islands&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Dominica&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Faroe Islands&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Germany&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Gibraltar&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Greenland&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Isle of Man&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kosovo&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Liechtenstein&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Marshall Islands&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Monaco&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Nauru&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Northern Mariana Islands&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Not classified&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Palau&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;San Marino&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sint Maarten (Dutch part)&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Slovenia&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;St. Kitts and Nevis&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;St. Martin (French part)&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Turks and Caicos Islands&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Tuvalu&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;West Bank and Gaza&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</column>
            <column>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk] / [federated.161s2oj0jtb3gd1a6bytg0myrxqf].[:Measure Names])</rows>
        <cols>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[Multiple Values]</cols>
      </table>
    </worksheet>
    <worksheet name='1960-80 mortality decrease'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (mortalityrates)' name='federated.161s2oj0jtb3gd1a6bytg0myrxqf' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.161s2oj0jtb3gd1a6bytg0myrxqf'>
            <column datatype='real' name='[1960]' role='measure' type='quantitative' />
            <column datatype='real' name='[1980]' role='measure' type='quantitative' />
            <column caption='Percentage decrease60-80' datatype='real' name='[Calculation_477170460220043275]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((SUM([1960])-SUM([1980]))/SUM([1960]))*100' />
            </column>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_477170460220043275]' derivation='User' name='[usr:Calculation_477170460220043275:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Aruba&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bahrain&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Belize&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Brunei Darussalam&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Burkina Faso&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cabo Verde&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cuba&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Gabon&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Guam&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Hong Kong SAR, China&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Jordan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Korea, Dem. People’s Rep.&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kuwait&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Liberia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Libya&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Macao SAR, China&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Maldives&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mali&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;New Caledonia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Oman&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Papua New Guinea&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Peru&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Qatar&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Saudi Arabia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Syrian Arab Republic&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Tunisia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Virgin Islands (U.S.)&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]' direction='DESC' using='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_477170460220043275:qk]' />
          <slices>
            <column>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_477170460220043275:qk]' palette='green_blue_white_diverging_10_0' type='interpolated' />
            <encoding attr='size-bar' field='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_477170460220043275:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='reverse-palette' id='refline1' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</rows>
        <cols>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_477170460220043275:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='1980-2000'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (mortalityrates)' name='federated.161s2oj0jtb3gd1a6bytg0myrxqf' />
          </datasources>
          <datasource-dependencies datasource='federated.161s2oj0jtb3gd1a6bytg0myrxqf'>
            <column datatype='real' name='[1980]' role='measure' type='quantitative' />
            <column datatype='real' name='[2000]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[1980]' derivation='Sum' name='[sum:1980:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2000]' derivation='Sum' name='[sum:2000:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[sum:1980:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[sum:2000:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country Name:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;American Samoa&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Andorra&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bermuda&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;British Virgin Islands&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cayman Islands&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Faroe Islands&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Gibraltar&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Isle of Man&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kosovo&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Liechtenstein&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Monaco&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Nauru&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Northern Mariana Islands&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Not classified&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Palau&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;San Marino&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sint Maarten (Dutch part)&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;St. Martin (French part)&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Turks and Caicos Islands&quot;' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Tuvalu&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[:Measure Names]</column>
            <column>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk] / [federated.161s2oj0jtb3gd1a6bytg0myrxqf].[:Measure Names])</rows>
        <cols>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[Multiple Values]</cols>
      </table>
    </worksheet>
    <worksheet name='African mortality rate'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (mortalityrates)' name='federated.161s2oj0jtb3gd1a6bytg0myrxqf' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.161s2oj0jtb3gd1a6bytg0myrxqf'>
            <column datatype='real' name='[1960]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[1960]' derivation='Sum' name='[sum:1960:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Algeria&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Angola&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Benin&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Botswana&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Burkina Faso&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Burundi&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cameroon&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Central African Republic&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Chad&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Comoros&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Congo, Dem. Rep.&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Congo, Rep.&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cote d&apos;Ivoire&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Djibouti&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Egypt, Arab Rep.&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Equatorial Guinea&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Eritrea&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Ethiopia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Gabon&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Gambia, The&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Ghana&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Guinea&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Guinea-Bissau&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kenya&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Lesotho&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Liberia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Libya&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Madagascar&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Malawi&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mali&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mauritania&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mauritius&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Morocco&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mozambique&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Namibia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Niger&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Nigeria&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Rwanda&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sao Tome and Principe&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Senegal&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Seychelles&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sierra Leone&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Somalia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;South Africa&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;South Sudan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sudan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Swaziland&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Tanzania&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Togo&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Tunisia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Uganda&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Zambia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]' direction='DESC' using='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[sum:1960:qk]' />
          <slices>
            <column>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[sum:1960:qk]' num-steps='15' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]' />
              <color column='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[sum:1960:qk]' />
              <geometry column='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[Latitude (generated)]</rows>
        <cols>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Decrease mortality 1980-2000'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (mortalityrates)' name='federated.161s2oj0jtb3gd1a6bytg0myrxqf' />
          </datasources>
          <datasource-dependencies datasource='federated.161s2oj0jtb3gd1a6bytg0myrxqf'>
            <column datatype='real' name='[1980]' role='measure' type='quantitative' />
            <column datatype='real' name='[2000]' role='measure' type='quantitative' />
            <column caption='Percentage decrease80-2000' datatype='real' name='[Calculation_620159748490080258]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((SUM([1980])-SUM([2000]))/SUM([1980]))*100' />
            </column>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_620159748490080258]' derivation='User' name='[usr:Calculation_620159748490080258:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Afghanistan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Algeria&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bahrain&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bhutan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Brunei Darussalam&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cabo Verde&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cambodia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Channel Islands&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Chile&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Guam&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Honduras&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Hong Kong SAR, China&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Iran, Islamic Rep.&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Iraq&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Jordan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Korea, Rep.&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kuwait&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Lebanon&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Macao SAR, China&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Maldives&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Morocco&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Nepal&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;New Caledonia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Oman&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Samoa&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Saudi Arabia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Timor-Leste&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Tunisia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Vanuatu&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Virgin Islands (U.S.)&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]' direction='DESC' using='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]' />
          <slices>
            <column>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</rows>
        <cols>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Europe and Australia'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (mortalityrates)' name='federated.161s2oj0jtb3gd1a6bytg0myrxqf' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.161s2oj0jtb3gd1a6bytg0myrxqf'>
            <column datatype='real' name='[1960]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[1960]' derivation='Sum' name='[sum:1960:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Albania&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Andorra&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Belarus&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Channel Islands&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Croatia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Czech Republic&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Estonia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Faroe Islands&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Isle of Man&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kosovo&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Latvia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Liechtenstein&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Macedonia, FYR&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Moldova&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Monaco&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Montenegro&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;San Marino&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Serbia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Slovenia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;United Kingdom&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]' direction='DESC' using='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[sum:1960:qk]' />
          <slices>
            <column>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[Longitude (generated)]' field-type='quantitative' max='39420307.654010266' min='-17622882.232968882' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[Latitude (generated)]' field-type='quantitative' max='16245471.836392201' min='-20799817.627306961' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[sum:1960:qk]' num-steps='15' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]' />
              <color column='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[sum:1960:qk]' />
              <geometry column='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[Latitude (generated)]</rows>
        <cols>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Increase in mortality1980-2000'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (mortalityrates)' name='federated.161s2oj0jtb3gd1a6bytg0myrxqf' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.161s2oj0jtb3gd1a6bytg0myrxqf'>
            <column datatype='real' name='[1980]' role='measure' type='quantitative' />
            <column datatype='real' name='[2000]' role='measure' type='quantitative' />
            <column caption='Percentage decrease80-2000' datatype='real' name='[Calculation_620159748490080258]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((SUM([1980])-SUM([2000]))/SUM([1980]))*100' />
            </column>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_620159748490080258]' derivation='User' name='[usr:Calculation_620159748490080258:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Armenia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Belarus&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Belize&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Botswana&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cameroon&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Central African Republic&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Congo, Rep.&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cote d&apos;Ivoire&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Jamaica&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kazakhstan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kenya&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Lesotho&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Malawi&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mongolia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Namibia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Russian Federation&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Rwanda&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sierra Leone&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;South Africa&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Swaziland&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Tajikistan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Tanzania&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Uganda&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Zambia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]' direction='DESC' using='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]' />
          <slices>
            <column>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]' num-steps='15' palette='orange_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]' />
              <color column='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]' />
              <geometry column='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[Latitude (generated)]</rows>
        <cols>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Mortality increase 1960-80'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (mortalityrates)' name='federated.161s2oj0jtb3gd1a6bytg0myrxqf' />
          </datasources>
          <datasource-dependencies datasource='federated.161s2oj0jtb3gd1a6bytg0myrxqf'>
            <column datatype='real' name='[1960]' role='measure' type='quantitative' />
            <column datatype='real' name='[1980]' role='measure' type='quantitative' />
            <column caption='Percentage decrease60-80' datatype='real' name='[Calculation_477170460220043275]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((SUM([1960])-SUM([1980]))/SUM([1960]))*100' />
            </column>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_477170460220043275]' derivation='User' name='[usr:Calculation_477170460220043275:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Belarus&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cambodia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Czech Republic&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;El Salvador&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Estonia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Iran, Islamic Rep.&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Latvia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Russian Federation&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Slovak Republic&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Ukraine&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]' direction='DESC' using='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_477170460220043275:qk]' />
          <slices>
            <column>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_477170460220043275:qk]' field-type='quantitative' max='45.088659668099957' min='-36.706880366744493' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_477170460220043275:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</rows>
        <cols>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_477170460220043275:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='mortality 1960'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (mortalityrates)' name='federated.161s2oj0jtb3gd1a6bytg0myrxqf' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.161s2oj0jtb3gd1a6bytg0myrxqf'>
            <column datatype='real' name='[1960]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[1960]' derivation='Sum' name='[sum:1960:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]' direction='DESC' using='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[sum:1960:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[sum:1960:qk]' num-steps='15' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]' />
              <color column='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[sum:1960:qk]' />
              <geometry column='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[Latitude (generated)]</rows>
        <cols>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[Longitude (generated)]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Story 1' type='storyboard'>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='235' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97310' id='1' param='vert' removable='false' type='layout-flow' w='98504' x='748' y='1345'>
            <zone h='5546' id='3' type='title' w='98504' x='748' y='1345' />
            <zone h='16975' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98504' x='748' y='6891' />
            <zone h='74789' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98504' x='748' y='23866'>
              <flipboard active-id='9' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='The mortality rates in 1960 from the data of 237 countries averages to 348.33 per 1000 adult males.' captured-sheet='mortality 1960' id='1'>
                    <capturedDeltas>
                      <worksheet name='mortality 1960'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[Latitude (generated)]' field-type='quantitative' max='10390423.225400038' min='-9536380.6514069475' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[Longitude (generated)]' field-type='quantitative' max='20317965.393037274' min='-20421278.088434771' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='The African continent has the highest mortality rate that averages to 459.1 per 1000 adult males.' captured-sheet='African mortality rate' id='2'>
                    <capturedDeltas>
                      <worksheet name='African mortality rate'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[Latitude (generated)]' field-type='quantitative' max='9410336.4245071076' min='-12634449.05338552' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[Longitude (generated)]' field-type='quantitative' max='12321345.517399136' min='-10445074.39860674' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Australia and The European countries excluding Turkey and Kazakhstan have the lowest mortality rates at 200 and 203 per 1000 adult males respectively.' captured-sheet='Europe and Australia' id='3'>
                    <capturedDeltas>
                      <worksheet name='Europe and Australia'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[Latitude (generated)]' field-type='quantitative' max='11855994.730702726' min='-4918827.2207441917' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[Longitude (generated)]' field-type='quantitative' max='21357214.885065835' min='-12950426.866321664' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='The rates compared from 1960-1980' captured-sheet='1960-70' id='5' />
                  <story-point caption='China has shown a drastic decrease in mortality rates of almost 66% from 1960-1970, followed by 33 other countries which has shown a significant decrease of more than 30%. ' captured-sheet='1960-80 mortality decrease' id='4' />
                  <story-point caption='On the contrary, few countries have shown a more than 10% increase in the Mortality rates with Hungary being the highest at almost 40%.  ' captured-sheet='Mortality increase 1960-80' id='6' />
                  <story-point caption='The Mortality rates from 1980 to 2000.' captured-sheet='1980-2000' id='7'>
                    <capturedDeltas>
                      <worksheet name='1980-2000'>
                        <filter class='quantitative' column='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[sum:1980:qk]' included-values='non-null' />
                        <filter class='quantitative' column='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[sum:2000:qk]' included-values='non-null' />
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='There was a significant decrease of above 30% in 42 countries from 1980 to 2000, with Iran having the highest decrease of about 63%.' captured-sheet='Decrease mortality 1980-2000' id='8' />
                  <story-point caption='During these two decades a few African countries as well as Russia and some of its neighbours have shown an increase in Mortality rates. Zimbabwe and Botswana has shown an above 100% increase in the rates.' captured-sheet='Increase in mortality1980-2000' id='9' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='-1' />
    </window>
    <window class='worksheet' name='mortality 1960'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[sum:1960:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='African mortality rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[sum:1960:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Europe and Australia'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[sum:1960:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='1960-80 mortality decrease'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[:Measure Names]</field>
            <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Calculation_47287801345564673:qk]</field>
            <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Calculation_47287801347444739:qk]</field>
            <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Calculation_477170460219936778:qk]</field>
            <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='1960-70'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[:Measure Names]</field>
            <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
            <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[sum:1970:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Mortality increase 1960-80'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_477170460220043275:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_477170460220043275:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Hungary&quot;</value>
                <value>-39.403487774782761</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_477170460220043275:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_477170460220043275:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Ukraine&quot;</value>
                <value>-38.989514715941553</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_477170460220043275:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_477170460220043275:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Latvia&quot;</value>
                <value>-38.834604955627434</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_477170460220043275:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_477170460220043275:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Belarus&quot;</value>
                <value>-35.679801415112777</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_477170460220043275:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_477170460220043275:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Lithuania&quot;</value>
                <value>-34.694579631303014</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_477170460220043275:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_477170460220043275:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Iran, Islamic Rep.&quot;</value>
                <value>-32.422624567970352</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_477170460220043275:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_477170460220043275:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Slovak Republic&quot;</value>
                <value>-31.944260558718398</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_477170460220043275:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_477170460220043275:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Russian Federation&quot;</value>
                <value>-30.800216567406601</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_477170460220043275:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_477170460220043275:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Estonia&quot;</value>
                <value>-23.835907493666753</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_477170460220043275:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_477170460220043275:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Poland&quot;</value>
                <value>-23.735292536160678</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_477170460220043275:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_477170460220043275:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Cambodia&quot;</value>
                <value>-17.812214665136956</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_477170460220043275:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_477170460220043275:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Bulgaria&quot;</value>
                <value>-15.113557821726969</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_477170460220043275:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_477170460220043275:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Czech Republic&quot;</value>
                <value>-14.222771586355391</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_477170460220043275:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_477170460220043275:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Denmark&quot;</value>
                <value>-10.588258722319575</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_477170460220043275:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_477170460220043275:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;El Salvador&quot;</value>
                <value>-10.215052293389835</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Increase in mortality1980-2000'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Zimbabwe&quot;</value>
                <value>-150.62518652684446</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Botswana&quot;</value>
                <value>-112.82821301447972</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Swaziland&quot;</value>
                <value>-71.243628806919475</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Kenya&quot;</value>
                <value>-69.815529002994509</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Lesotho&quot;</value>
                <value>-63.340303840241511</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Zambia&quot;</value>
                <value>-61.401480692195932</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Malawi&quot;</value>
                <value>-60.41089055435247</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Uganda&quot;</value>
                <value>-51.394675499314936</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Namibia&quot;</value>
                <value>-41.659140679876984</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Belize&quot;</value>
                <value>-40.229256053046761</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Central African Republic&quot;</value>
                <value>-36.15572462909806</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Congo, Rep.&quot;</value>
                <value>-34.756652710701985</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Kazakhstan&quot;</value>
                <value>-31.802835270950521</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Tanzania&quot;</value>
                <value>-27.608487179621545</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Belarus&quot;</value>
                <value>-27.531998876347846</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Ukraine&quot;</value>
                <value>-27.358070801113726</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Jamaica&quot;</value>
                <value>-27.154392648767818</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Cote d&apos;Ivoire&quot;</value>
                <value>-25.83290332412712</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Mongolia&quot;</value>
                <value>-25.01424111923804</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;South Africa&quot;</value>
                <value>-22.947016979980315</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Russian Federation&quot;</value>
                <value>-22.214127633270969</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Sierra Leone&quot;</value>
                <value>-22.176552660356723</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Tajikistan&quot;</value>
                <value>-19.30011482577396</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Bulgaria&quot;</value>
                <value>-18.44985410763379</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Romania&quot;</value>
                <value>-18.366711338454859</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Cameroon&quot;</value>
                <value>-16.054634103751315</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Rwanda&quot;</value>
                <value>-14.662673662840314</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
                  <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[usr:Calculation_620159748490080258:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Armenia&quot;</value>
                <value>-11.71786057102039</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Decrease mortality 1980-2000'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='1980-2000'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[:Measure Names]</field>
            <field>[federated.161s2oj0jtb3gd1a6bytg0myrxqf].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='1960-70' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dZ3BcWXaYvxc6d6OBRs5EBnMccoacxJmd2SDt1spykFy2fziUs8v2H9tl
      /9iyq+QfdpUlWy6VXLZkW7Zle1fSesPMagKHM0MSIECAyETOOTQ6pxeuf4AzQ+6CIEE2GwDx
      vipUdaP7vXPf63fuPfeec+6RhBACC4tDirzXDbCw2EssBbA41FgKYHGosRTA4lBjKYDFocZS
      AItDjaUAFocaSwEsDjWWAlgcaiwFsDjUqA++CYVCZDKZvWqLxX1M00SWrb4pF0hWLND+IxgM
      kpeXh6qqj/9yFshkMtjt9pzIyrW8x8l6ZDdjGmm6bvdhCMH63DhtdwYwzC1dEabO2OT0joIN
      Lc7M0uqX74WRJpY8eKOLrmkYpkCYBrFoFE03EEKQTMRJpDII0yAajaIb5l431eIpeGQXszE1
      wNjyKhWbR7jx0XXKz1xhaWaE0cl5SioamJroYXZijNYzF1mdvkc0JXHhXDPd3f2kNIVLF48j
      aSZ3b98iiZtSd5jrQzHevXKa2alxHP4yWspc3Bmawu4NcPn8SSRJyuW1P5ZkaJ33f/jH1Lzx
      F1CXuwnpCmld4nRdEd1jyxSXluPNrLIUN9BMD+9evcj+ugKLx/HIEaB3cJaqfDsTc2s01jdx
      /FgTY1NzXH7lLMGVEB5/MZdfPsb06BJGJs3q/Cizi8uknWVUFXrYDK6ztLDO9OwiLreLyspK
      mltPUZLvIa0ZjPR1s7GyRGHjWaR0GHMfGmJOf4BXXz6OYQiiyTQlZVVsrK4w3D9MJp0mHIqy
      HoVXX3sTn6RhjQEHj20VwEiH0B1FNDQ2EV2aQ7XZUFUVlQwT4xOkdB273YnD4SATXmNDVzhS
      XQymwO30oCoqEiBJNs6/dIGV8QE2NTuxjRVGhgbwFJZTVujHFOB0u1AUJceX/WRIkny/Rxdc
      fu1NHCJDvsdLID/AxdffwpZaJamnSWkaiUzG6v0PINtOgg0tRTwDeR4noVAIm6Lg9PqYvtfF
      +OQUrooznGkqw+dxEI2mCQaXQbFTWlyEbiqokoGsSGQyJuGNVXTJQU1NGfNTU3j8+YQ21nH6
      CijMcyHsHoxUHI/Xu+9MoEhwmTsdncSVfI7WFDM1M0vlkaPUlTq51daFLa+Uo7U+7vaPUd54
      ipONlVmRa02CcydrV6tAqUSMSDxFIBBAVQ7fMp0QAiQJ6YvXgCTB1r+zp7yWAuRO1q7usNPt
      xen2PnOjDioPPuQPv96L1lhkg8PXjVtYPIClALvAMAy+MBhN0/zSDNJ1Yw9bZfEs5MbIPKCk
      whu89+Of0nL1z+AKDTOysI7bX0KDX6FvahWhODle4+be9Aq+ojquXDhqrQQdMKwRYAfs3nxe
      vdBALKkztbjBuXMXia0tEovHMW0KqViUuaUoV9/9JiKyZvkBDiCWAuyArChI9/v0Vy6eY3py
      gnjKYDOWoaG+EZ9dxRRbppAVUXUwsUygHYgEl+kenmZTzVCQKSYWClJd20ipO8W90REEdpor
      8rj+wft4i+qt3uQAYkWD7gJd11FUFQmBYWyFLEvS1iQ4m2v2lh8gd7IeusO6rmOaliW7E+YD
      +RKG8dXqTzbzKHRdR9O0nP0WmqblRM5eyHucrIcUIJVKoev6c22QxeNJp9MoipKzGKkvFC5X
      5FLe42Q9pABe71deXiEE6XQGh9NBMp7Arkpokh2X/dE/iq7rKIqy72J6ssWWtSjdD3/4IhRC
      QgiR1Ws2TfNAmEBCQFrT6Z9cwa4qHDtSjE19vNLuJxNI+d73vve97T5IhWb4b//zA1pOHqOv
      vQufEqV7ZhO3w4ZDFczNziPbXQg9yfLyMppkY2VuGqfHy9LCAqZsw+XInV35PNBScdo//RQz
      rwItOMON23eI6ZDvlLhx4waLmyncIsLNtk6SuCgJ5GVFbjKZxOFw5Cwt0jCMpxptEukM//4H
      t4klNaaWQ3TcW+BCawXyYzqDp5X3NDxO1iPv8PDgDFdeO8nS0gaypCDJEol4gp6ODjY2QsSS
      cW61dTIz0Mn8Roye7m7iifj9gLkEn91oey4XlEuEgEKXzko4zd2hcd68+jbhhSlGurux+8to
      PFLJyOg0r1x9m9XJMQ6bP7h7dInqkjz+6rfO8Le+cwHTFIzPB/e6WbtiWwUQZobZuUVWFucY
      GpsGBEJI1DQ2UlTgZfxeP9NL64RjYRSHm/rmFlwOGUOYhJamGZ+eJxpL5PRCngd2l4dAwA8C
      zh1r5KNr1xhdCBKOJvD4vHz+8UckTRt2VcVus1aUDyLb/mp6MkrLpTdprS9jcGAQu+LE4XMy
      392J119KbbWf5NwqvrJKfPk+nIpMSXEJNlXBqZjY7VFKvUW5vpasEwut0X9vnCWbQXFLKQGP
      C2e1n6YqFz0TUyiqi5I8iZuffUJGeA+dH+Bcczk3++f4vfd6SGs6sizRWBXY62btil35Ab6Y
      BMJXE8BtvrT1qSQd+LgY0zDIaBogoSgyyWQKt8eDIkMyHke2O3GoMrFYHJfHm7UciYPiB3gR
      JsGWI2wfclAU4CDIe+ptUSwsDgPWzM3iiRHCRITnQQgkfzXSC7B7naUAOyCEyfToMN6KRnwi
      ws2OHhqOn6bMq9DR2UNRbQtHiu10dPbSdOYSlYW+vW7yc0MIk0z772CsDAAycnEzjlf+LpJ8
      sB+hg6/Cz5FkOMjcSB+Tqwk+b+vglddeY2Kgh+Huu5Q0HWOs5w49XT2cevkyAx0dL3Q+gLky
      iLk5jes7v43rO/8eEVvFWOzZ62Y9M5YC7IA7v4jW5hoQ0FBTzqeffs7U0gaqz0XvnU4ywoYm
      7HhdLnxu94utAPE1JF85kqwgyQpyXgUivrbXzXpmLAXYAS2dZGMzRGhznfziak62NHCkrIJ4
      JMXZc2fx2hQ8doPJqUlCSY39ub1XdlCrL2GujZAZ+GO0wR9iLPWi1l7e62Y9M9Yy6A4kY2Fm
      55cQso1Cv5fl1TWq6xpwqwbj49P4iyooybczNj5FRV0z+R5HVuTuz2VQgRldQRv6EWBiO/od
      5LxyeApvz35aBrUUYB+yPxXgYMrbVUKMVSBjf5BIJMhkMvs+GvQgyHucrEeOAD8f7/4ihDYc
      FKwRIHeyHl0gQ4vxwXufoZmCwZ7Bx65wBJdnCcZevNFjc32VeNpATycYGR4mGIkjTIPZqXGm
      5lfQ0nFGh4eJJF68az8MPLKLWRrpJ+MULG3EiYXjZOLrXPuoDcXt5mxrLR13RyiubcSdCTG7
      EuL06UakWJi77b0YOHjjzSs41IO9yJTYXKP9o/couvgrZGbaKa5tpKuzk+ZyH4sZD1UlMNTV
      gVpcyc0bt/nGu69Zo+QB4xFPqKB3ZAG/lGZ0cg6A6cExzrz5NhUFbrr6BvEWBVhbnmdlLcjl
      t65iMxPEEho2WWZzc4Vo8uDnFrsLijl/phnTFHg8HjaCYRZXVpicmGNtYYauu4MEUzJNjU3k
      O9RDlxDzIrCtAujxdRxFdZw5/xJmaAkhmZRUldBz6wYjM0tUFReRimUoKanA5y0gz71lY6WD
      y6ymBapsvjA9oYRAIDh++gINVaWU+AsoLQpw4qVX8ctJhJkmlkgQjicsp8oBZNtJsDBNTAGK
      IqPrOhIS8eAKfaOTRCNJrr77FmYqiWJ3oMoysqogTAOERDKZQLHZcdhtBz45PhJc5m7vEIbi
      oq6ikPGpWVpPnqeswM6dtjacxXU0V3rpuNNL46mXqS7JTk6wNQnOnaxd+AEEyUQC1e58oqQH
      i6fHUoDcydrFHZZwuT1ZaJKFxf7BMlstDjUHO5g7B5iGAbKMhCCdSmNzOJAliUwmg6rakGVI
      JdM4nE5k+WDPeQ4SQpjo936MNvqnyIF6HBf/BpLTv+vzWAqwA8nQOj/9kz/iyJu/hm31LmsJ
      Ex0bDT6Fic0M0WiSE7Ve5kNpTMXPu2++9MKsfu139JH30Be6cb75TzGW+kh98hs43/1XSMru
      5haWCbQDzrwAr79yAsMQhGMpqmrqCa2tIjltLK0sYAqJ9Yjgjatv4xWZFzofYL+hT1zHfuYv
      IufXoDa9g0hFEMnwrs9jKcAOSPKDhbLfQNaSeF1uFhY3+eXv/lkK7WCKNGlNI6VZhbJziVx6
      HH3mJiIdw9wY3zJTHbuvYGqZQDsQCS7TN7VOXBlg2ihiZnaOI03HKHal6br5Ka78Eo4e8dL2
      yUeU1p2yepMcYj/9a6Rv/CbJn/xDsLlwXP4HSDbXrs9j5QPsAtM0748KX5VEkiQwTZHV0GXL
      D/BkCNMALQmKHUnd/ny78gPE43GrPsA+IJHY2lc1l/UBcqVsz0de8v7f7mU99Indbs/pjbDY
      nnQ6jdPpzJkCaJqGzWbLiaxcy3ucrIee9ge/KEyDpYU1yqvLnmhyt7KyQmlp6VM39CBgGAay
      rNw3e0yQJGRJul8jLHsPq6qqOe2MJEnKqQmUS3mPk/XIOxxfG+O9awP8mT/3XbTNeaZnlmg+
      dR6HEaZ3cJz61uNI8VWm1lKcO3Oc8YkxVJFmbGaZk2fO4XEc/JEkFdng/R+/R8vVX8EdHuXe
      7CqeglLONpbwWVsveaXV1Pp0BqeWyCtu4Mr5lr1ussUueeTMradnmvMna5mZXaJnsJ+m5gr6
      uu/x6ed3qW+oZXLwLp33Vqn06PSPziBJEpm0gVM16Ojuz+U1PDfsnnyunK8nmtAZn1/jpYsv
      E19bZKCjB3dBEYX+PGYXw1x995uY4RUrH+AAsn2BDCNJKJoBYTI/M4fLW0gg348iBKqigJbC
      NA3sHidurwdTGCB0BoeHURTb1vsXgAcLZb984QxjIyOEExrICtV19Uzf6yFh3C+UvcdttXg6
      ti+Qkc5w5vXXqSrxE5iZQVFsIDs50liFSNnpHRrF46+mzpemb2qNCxcuEst3kdhcZX49TmNT
      U66v47kQCS7TfW+KDTVNQUMJiWiY6poGWqvd3OzsQCg+Wu8XynYHjlh+gAPI7vwAwmR2aoK1
      UIKm1qNfZoIdFr4qlA2GriMpCrIEumagZrFEkuUHyJ2s3d1hSaamvomaZ23VAeXBB1J54HU2
      H36L3GKN2haHGksBdoEQX4VAbL0WX762OJhYY/cO6OkEXe3tlJ14BW9qia7BMcpqm6jOU+nq
      H8VTWEFzuZPugVEqG09zrL58r5tssUusEWAHTMPEqyRZDqXpGhjljatvEZyfYH5ykvyqGlam
      x7k3MsmlN95ieXzE8gMcQCwF2AG720txUQEIOHO0no+ufcLYwga6qrK+soIk2zGFDYfNhj2H
      sTQW2cMygXYgHt5gaHSKJZtEaXMxJX4fTlsespnBabeTNKDAJ9F+63MSwmH1JgcQKx9gBwxd
      I5lKAxI2m0o8nsCXl4ciCaLRKHanB4dNJhyO4M3Lx5alvVAtP0DuZFkjwA4oqg2v9yvTxuH4
      qgKMP7/gy9cFgUBO22WRPawCGfsQq0BG7mTtWCBDAPJz3t/zwX1IH8dO2T1b5xE5/SGfF5YJ
      9OSYpmBlM4aqyBT53b+wH+1TF8gwUkH+8A/+H2njYf1YmpsirZssTM2Q0p99+hBeXmR6YQXM
      DB+//z4fffgzOvrHtv1ud2/vI88TW19lYnrxmdvz88xOjLARzZCJBbn28UfMrmxg6hm62j+n
      rWeYVHSDT699zNJmPOuyLXZG0w3+6896+M8/6eY//FEHP23b/rnZiUd2MRP9g9Qeq2R+OcRU
      74dopo28sqPMD35OUf05qvIFjpCdH11vQ0vBlcvN4Kljc3aMsjIPvQPjOPMrePOV06zOjtE9
      OIKnsIrY0gymIlFa20J4ZpRoKkHD2SuACZKTsiIP6/Ek44NdDI/NUX3iJdbGb5NSijHDs/xs
      eZ6CylZkoXGmtZTBsTihhUEiyQTVR8/R9smHLAZTvPPNrz9zsF5ic43J/i5cJ0uJjLVx+erb
      tH/2OYl8ByKvhmPVRfTcaePEpSt0ftpG6bfetlaCckj36BKmKfjnf+V1TFPwG//jc840lVFV
      /OS7dD/i9zIZnZwnubbM8OQcjoJqvvmNq5CCY8dPcOnSWUxNI7wwxfHXvsWxhhoMQ0PTTTKJ
      NLFYDJvdTigcAiAcDqG4fGyuL5JfUMXbV19HhOaxFTfx2qVL2GUJkBCGwOZyY6TSRCJRfB6V
      tY0oOPL4+luvUlBZzzd+6Rsk1xdIaxogSG2uIRUc4Y3Ll7GbSSIpE9PUSWWePbnfXVDMsdYj
      IKCuuowbN9qYXt5geSVEbHOFjz7+jLhpx+d24fe82IWy9yMbkSRlAS+yJH1pAm1GU7s6x7YK
      oMXWKW6+wNV3vkE+UZx2B0gyDqeKLJvcbu/B5nARqG1m6vaH9AyNYLc5Geq6xdTKKslkHM0U
      qOqWPRaPRpFMA5vDjcPlAEnB5S8ltTlOW3cPQlYBCSFSzM8vYHO7iCWT6KaBwyaT7w9gUyT0
      2AYfvP8hRTWNpDeWuf5pG0pBIXpkmhudXRjCIB7XMU0TJQv7dGqZFKFIhEh4k6LyOk4211FT
      Uk51RTF5BaX4VHDZdGZmZ9lMZl7oQtn7kQstFXSOLNI2OMeHdyZZDydoqS7c1Tl27wcQAsMU
      KIqMkQpxs6OHlKnw9utXQIitpHEEhml+OSEVQmw9lD83QRWmiQko26x2bPfZFwFosixjmgYg
      I8vSQxNpwzCQZDkrk/dEdJPpmQVMxUZxvo/F5VWONLTgdyuMDQ/hKKigIuBiZGScqsajFHid
      zywTrEnwkyIELKxH+LhrCpdd5Wsv1RPwPbw51nMtlC2EwPzigcvRkt1hwFKA3Ml6pjssSdJD
      iSEWFgcN6+m12HOEECBMQICk5LS2nKUAjyEcXMfmKcAhZZieXaCwrAKvXWZ+fhFvQTH5boWZ
      uUVKKmvwuQ5XjnS2MBa6yHT+F9DTqE1fw3bqzyPJuXk0LcN9BxKhNW786Y8ZXIhx+9bnZEyD
      ztsdjHS2E0wZ3Lj2KQPdt4lrGjdvdFhbozwFZiJI5vbv4Hzjn+D8pX+DsXoPY6YtZ/ItBdgB
      l7+Il862YJoCp9NJJJZkaWUVu9/Dndu3SAqVcFKmtbUVv12xEmKeAhGeQ/KWIweOILsLUWte
      wVgZyJl8SwF2QJKkLwtlnzx3kSNlhRT781laCPKrv/YXKbYLZNLEEknCCatQ9tMgB+oQsWX0
      hbuYoVn0sQ9Rql7KmXxrDrADkeAyQ4tJNOUec6KIuYUljp89T4FTo6v9JkX1LTRWuOm5c5vW
      s+ctBXgKJEcejqv/HGPyOqasYDvxKyiV53In30qI2X9YfoDcybLyAfYhVj5A7mQ9XT6AEOiG
      seseStw/znb/uFxXJjkoWCNA7mTtOh8AQJga3f1DX/1Dj9J+e5Do0gTvfdJOMjhP/+TSLx6n
      J+geGP1CAn13+p78SvYIKx/gxeaJ8gGmB66TlAKcPFLE0MgYgapjLIz2sz43TvXxVznZUEI0
      usTkoh8jlWR2bhVfUSU//eH3SenQdOIkw3cHaDp5HE3Tmeq/Q9/sEsJ0kbvpzu6x8gFefJ4o
      HwC7l3fffo1YJIzT72ZzI0zxkVa+8ctfJzQ/DUCRXWYtkqa11MH42iZel46//ATffuM4o+Nr
      1B+/wOnmagBm1+N8+5e+RWm+L0eX+XRY+QAvPtuOAF/kA1w4Vcfttg7seYXYFZloNIEwNFS7
      jURwlg/em6fp3JsAVFQHmJ8VVNYV0z01TH5eEbGVLn62YNJy4gQ+lw8kCZfDjtem8sHHn2Ca
      u6/rmku+zAdQNmmpq8OdF0HWZaqL7YSdpWQ2N6x8gAPOrpZBhTAxza24+60AJoG0w0qFeT9O
      X/25hPetMGoTWVX2dXV1Kx/g4Mt7rvkAFs8HSwFyJ8uas1kcaiwFsDjwCNNEGPpT1WmwvFCP
      wcoH2N8YwUkyt34bkQwil5/G8fLfQVIdjz/wPtYIsANWPsD+RmhJ0jd+E9vZv4Trl38TSXWi
      9X9/V+ewFGAHrHyA/Y1IR8HQUEqPI7nyURvewli8u6tzWAqwA1Y+wP5GcuYj2T3oU59hRhbR
      +n+AcuS1XZ3DmgPswM/nA0xMz3Ls7HkCTo2OG9cprGumqdJNx60btJ69aClAjpFUO443/wmZ
      27+L1v991Iar2I5+e3fnsPwA+w/LD5A7WVY+wD7EygfInSxrBNiHWCNA7mQ9sosxjQz93fd2
      F+EoDFKpNGAyPTm3myMPBLqmYd7vLgxdx7j/JpPR9rBVh4NgJMnv/LCTf/0/btA3uUK2uu1H
      djGbMwP0TS9S3FBPMjhDMJSirqKQ3qFRCstrKXRkGJla5syF88yNDRGMpKmvLeTap0NcffdN
      JMUkuDLD0NgsTm8JR0ocDIzO0nj0JFWlBY8Su69Ihtf5yQ9+QP1bv459rYeFcBpUN+cbi2nr
      myJQWkmxHGJyLY7sLObdN87v6+C+g0oyrfFbP7jNd660UJzv5r/9aS82ReZobfEzn/uRI0Dv
      4Bx1JV4mZxcZ7LtLUXkVAwPDnHnpAuGlBbp6+3G7dG7f7mAlKdNaX0YsIVNX30xlaYCFxTmC
      wRVKao+R3FhF03XQE3T1jzxzo3OFwxfgjSsn0Q1BMJqkobGVyMYqQ733kBQVUzNYCwveeufr
      eM2klQ/wnFhYi+L3OjjfUk5NqZ+rZ49wd3Q5K+feVgHMTIS0nEdVVTWhhVnyiqupLQtgx2Rl
      cZ5ERsPudJNfVENrQxUetw+73Y6sOtCSITKajoSEJNvwut3YVBujExNU1VThtB+cxUJZlr/s
      0S+/+hpGMorL7iTP5+fsy1cwwvMk9DQZXSetP3tBDovtKfS72Iym2AgnSKQ0hmfWqS3zZ+Xc
      206CjXSCSAYKfG42NtaRZYWCggIWZ0YZGJnAUIq4craWqfkVqmprUSQZt0Mho8uEVmeQfSV4
      VLDZZBSbh2QsiqknmF8NUlJWSVnRwTCBIsFlOtrbiSkBTtQWMzU7R2lVEw3lLm613UX1FnG0
      No/eexOU1J7g7NGarMi1JsG/SPfoEj+6OYIQcLS2iF994yg29fErSVnNB0jGI6wHIxQWl+J2
      2h5/wAuGaZpI90cFYZogSUjSVqXCbC5ZWgrwiwghSGV0DEPgdtmeuABKVusDuDx5VHuevADZ
      i8aDD/mDmXByFsoxWeyMJEm4HNnvdA+OQW5h8RywYoF2wVY5KOW+2WNuBctJUs49qS8aQpgY
      C10Yc50oZSdQai/nrD6ApQA7kIps8sF7P6P5jW/jjowzOLOML1BOg1+lZ2IR2e7lWLWbgYkF
      8suaeOVM0143+UCiT3yCPvwT1MZ30MY+xAzPYzv96zmpFGOZQDtgc/u4eKqKcFxndHaZSxcv
      E1tdYDMUQnG7iYeCTM9v8uY730DbWLLyAZ4SbeCPcLz6j7C1fgvHq/8QfewjELm5m5YC7ICi
      qijylmlz6fwZhoYGCUbTRFM6JcXFuG02TCG2fAXWPPipkRw+zMTG1ptUBFQHubqhlgm0A5Hg
      Ml1DE2yoaQoaS0jHo9TUNBBwpxidnUU3FZpKPHzy4fs4/bVWb/KU2C/9TdKf/AaatwwRXcL+
      8t8BKTd304oG3QWapqHabFuFwHUDWdmaEGuajs2WvSW6w+gHEOkIZnAKyV+N7A48V1kP8tAd
      Nk3zqbaWOCzIsoxp3LdNJQnTNL/8v2Fkz2Y1TXOr4n2OyoV+IS9XbCtP9UDJCQQ8l3v5KB5S
      gFgshqZZob17TSKRwDTNnC2t5rpOQy7lPU7WQ5/k5X3l5RVCIER2XfwWT4YkSYfOBDIMk5G5
      DWRZoqkqgJKl5+6pQyHS4Xl+/399xl/+67+OKtKkUxlsqkI0GsPhcJDSTEqKA2yuraC683Db
      JELhCDaXj9DyDIWVdSQimzi9fvK87gO5SKKnU/R0dlB69CKezDJ3+keoqGuhqbKA27c7Ufzl
      HK3w0NU3THXzWVqPlO51kw8k6YzOf/xhJ6oiY5iCDzsl/vZ3X/qFTZWfB49UgJGhSV557QSL
      SxuM93yIq/gotvgqzkA+k9NrFPodpGrKGVmKI9JJGgsl5jJetGSc2rI8UvEo84vLzC4N8N1v
      fQ1yZM9mE0PXsBthFkMpwuPDvP7W27R/dh1zRcHmr6DhSCXDvZ1cev0tOj+9SfORUmsl6Cno
      n1zF53bw137pLAj47T/pYGRug+NHnj3h5XFs+3sJoTE9s8Da4jxD4zO4C6t545Uz2Gx5nD5z
      lMqSOqorC1mdmWNjM4IwJFDsNJ84jdelYJgG0bUFZhdWiUUPbukgh8dHWWkhCDjVWsfH1z5h
      fGGDzXAcu0Pls48/JmnacNptOB12a2e4p0QzDOz3t8qXJLCpCrqem0n5tiOAngjTeOENjjdV
      0NfTh+rwIksSBcUBZFSKivPwejUCZysJd3XjzC/A6/dhVyUKA4V4nCqKEKgOlXzHwY0eTUSC
      jEzMsGhTKW8qorwwH6fNR2OFk3tL69hVJ4Ve6LjdRtRQrN7/KTndWManPTP8zw/7MUyTWCLD
      sRz0/pAFP8AXh//Ckt39STQPZFUdNHQtQyyeAEnGYVeJRuP4CwqwKxKhzSCq04vHoRIMbuIr
      KMRhy86qzWHzAwgBiXSGu6PLyLLE2aYynHZbVqxmq0DGAeSwKcBeyrJGbYtDjaUAFs8FMxHE
      DM0ijP3tWLWC4R7D/NQ47uJavFKM9ju91B89RYlXoetOL0W1LVQX2rjT3UfjqYuU5bv3urn7
      An36Bpk7vwc2N5LDh/Otf4Fk9+x1s7bFGgF2ILG5xmjPbcZW4nx+o43TFy4w3NvNvc47FNS1
      MHSnnZ47XTSfPkdPW7u1LxBgJjfJ3Pk9XL/873B9+7dQyk6R6f3DvW7WI7EUYAfcBcWcOFoH
      AmoqS+jo6GJmeR2b301X+03SwkbatJOf58PvdlkKAJCJgc0Ndi+SrCAXNiIii3vdqkdiKcAO
      bC2DxonHIpRWNXKiuY7q4lLCwQRXXnuNPJuM06azsLjIZiJtFcoGJG8ZktOP1vYDxuMAAAqE
      SURBVPuH6LO3ydz976gt39rrZj0Saxl0BxKRIOOTs5iKndJAHvOLK9Q3H8Vr0xkcGiVQWkNF
      oYPBoVFqWk5S6LMKZQOITJxM3/9BhBdQW76JWnWeBzO89tMyqKUA+5CDrgD7SZ5VIOMAYhXI
      yJ0sawTYh1gjQO5kPbKLMbQ4n3xwC307/RAm9/qHD8WqRzS0STJjYGRSzExPEYknEabB8sIc
      i6tB9EySmelp4qn97fDZ76xuxvl332/nn/3uR/z++z2kMrnZbfuRXczKWD9hkixvJFif7WMj
      IigrCtB6oonxoTHmJgeZXZim+ugZzLVpFtejnH3lNYr92ZkI7gcSoTU+/emPKX3lVzHmOvAU
      VzByu4OjlX6mwxLlJRJDk30YnkLujXXw9XeuHNjAv71EN0z+4IM+Xj9VQ3NNIR/dmeQnt0b5
      s28ee+6yHzECCHqH5ym0GYxOz7O8usqFixeIbYQwEQQ3gvjyq3jra2+zMTeMiSCjxVhZCT33
      BucSl7+Ii+e3CmWrdjupjMny8goTo1ME15YZHpkkmJA5fuIEfrt0KEbE50FGMwjHUhyvL8Hv
      cXLlZA1D02s5kb2tAuiJDdT8Gk6cOou2sYjHV4zfbUchRk9XNxtxjUQ0SE9XBygOpuZCeFyO
      Fy4hZKtQNggEZ85foqooj2J/PsWFhZy+9BpeEcUwU8STKSKJlNX7PyUOm0Kh303nvQU2wgk+
      ujPJmaaynMjedhIsDB3NBLtNJZ1OAxIOhx0tnSQSS+Bye5HMDMmURl5+PsloGE3I+HzeJypa
      cFCIBJfpvtuPpnhoqCxkYmqOxmNnqAzY6Wi/jaOwhpYqL53dA9Qdf4n6iuzsZ3MYJ8GhaIr/
      e32QudUIpxpK+e6rLVl5liw/wAHkMCrAXsmyQiEsDjWWAlgcaqx8gF2gaxqKupWrahjGVhVJ
      SSKT0bDbD1/NNGFoaIN/gjFzC6XqJWwn/xySmjtTKhtYCrADyfA6P/2jP6b+rV/Dsd7L3GYS
      2e6lMU/m3kqMZMrk5BEPkysRVFcpX3v93KFaCcrc/QNEchP75b+PPvI+mc7/hOOVv7fXzdoV
      lgm0Aw5fgNcvH0fTTdbDcZpajhFZX8FQZELREKZhsLpp8NY738BtJA6dH8CYvoX9zF9CKWzA
      dubXMebu7HWTdo2lADvwYKHsV668SiqyiV21s7wa4c233yXgkDFFBk03DmWhbNlfibE6hNBT
      mGsjSL6DtzWkZQLtQCS4TO/EClHFIKAXsbS4SE3DUUrcKXo727G7C2iu93Hz2gcUVR87dAkx
      9pf/NunP/i1a3/9BsrlwvPqP97pJu8byA+yCrwplC0xT3K8SebgLZQs9jUhHkRw+JNXx3OXt
      ll05wpLJJPohHMr3G9FoFI/Hk7N8AKs+wH1kWbbq3e4DZFnO6W8hhMjp755LeY+T9ZACOBxf
      DWFCGKyvhigqLdx2aU+YJqYAZZs93IWWJJgwsckGXm8e8guyNmiaBpK0VRdMmCZCkpCfQ6Hs
      VCqFy+U6ECbQkyIEhOMp2gfnMQyDK6dq8Xucz33X/Mddm/K9733ve9t9kFib4Pvv3aK+tZV0
      IoLToRCJZYhsLDA+vUJmc462/jHyfPkIPcHiygYbyzOsRzQKnGnuToVRjQRej4P+3l6EzYPP
      fbByBdLREH/64x8hCo6QXB6mvbuXtUiSgEtw7fpNVsIplOQqbZ3dBBMSlaXZCYZLJpM4HI4X
      KiUyldH4rR/cpiDPRUbXea99nItHK5578OTjru2Rd7ivb5qLZxuYm19mYPAeGHH67o7S2TWI
      wyZhdzrx+gM4zCh//MMfYXe60IXCRE8bG2kTGVieW8dIJ5HtLjrabqGbB2u+rbo8nGkpJRTX
      GJla5OWXXyW2Ms9gZw+ugmLKigJMza7z+te+Tmpt0SqUvQN9E6tUFefx3Vdb+M7lZqpL/PSO
      r+x1sx5RIMNIsb4ZI51KMj01i2maaJkUhqRy5nQrcyMDRHUb3jw/TlXh5KXX8SkJJmaXsCsm
      8cx9l5CAqZEhwhkd09Q5YM8/imrDfr/86cVzp+jr62UtnEQzBGWVldzr6SBpgCxJOavoeFDx
      umxEEmmEAFMIIok0Htfeh01sXyAjneLUq69TWx5gcmKSTGyTm53DVNS0EFybw5ZXSkVVBXc7
      77Bsa6S8MB+Xx06BQ4C3loDPjyoZ4LeT5xIsD45TVVtPDko+ZZVIcJmuwXHW1BQFTaXoyTjV
      1fW0Vru5dbcbU/JSW+Lmkw9/ht1XZXkVd6Clpohbg/P82/99C9M0CfjdHK0t2utmWX6A3fBV
      oWzQdQ1ZUZGtQtlPjGkKZlZC6LpOfWVh1ipB7sRTV4m0+EUefMhV1bbt/y0ejSxL1JUXkMlk
      cvLwPwn7oxUWFnuEpQC7QNc0vjAYDcP4sj5aJnO49wQSQmCsj6LPdez7ghg/j2UC7YCVD/B4
      hDDJ3P5djNVhZHchmbt/gPOdf4nsKtjrpj0RlgLswBf5AFO6STQcp6nlBHc7OzEKKglFQ9hk
      z5f5AHc+vYkJWYsIDYVCB8IRJpIhtGAQ++V/AbKCPvoz4mMdKFUvPRd5u8XaG/QZMXUNQ1KQ
      TB3dFBiGidNhI5VKo6g2FFlCVdWtoKv7K0TPiqZtmRG58i0c5mA4SwH2IbquoyhKzhRA07Sc
      rmTlUt7jZFkKsA95ZPHx5ygvl57sXMp7nCxLASwONdYy6D5FzyS4df1jJhc3sn7uaHCV8dlV
      QDB1r4fPbvdgYjLU3U5H32hW93g1DZ3eO+183t6Dgcm97nY6+kYQGHTduk7/2Gz25AnB7Fg/
      1z6+xnIwRiy4yLVPrrMRTbGxOMnHn94inn54mdZSgH3KSFc7lacuMXa3K8tRpgYjfT3cG5si
      Fd1gei1NU8Dg2sdtRNVCfNoa00uRrEnTtSTFVc0UiyU67w4SVgLk6Rt8/uE1bJXHiS5MEIqn
      syavoKyWSy+dpudOBx2d/bx04SR3O+/Q0TPGpeOV3Lk79tD3LQXYp4STUJzvxe/1Znm7FYWT
      587isMtkMkk8vgCB8gpCKxsECvLJLyrBSKWyJs3u8BBeGmM+46fELX0pY3U1RkVRHgX+fAw9
      SyouSUhGiusf/gxbfhGSzYvH48MlaaiuAN6CQhTt4ZRfSwH2KaX5dkbHp1iLJrK724QwCG1u
      EouGMSUn0fU5xodGqGyqZXF2mpnpWZx53qyJi4eWGJgJcbK1Eb/Xw9LcDDPTMzQ0ljIyOsnC
      6nrWdtUTwiQaz3Dxja+RCq1hM6LMzkyTUryQWGF6fBzJ637oGGsSvE8x9DQjQ0MEKhsoK8zL
      3omFxsi9UTRTUFJZi4itshaXON56hLmJEVJyHk11lVnzaGeSEUYnZpEkmZr6JkKL4yTlPJrq
      ypkYGkD1l1NbWZwVeUIIlmanWAvHqKhtxCenGJmYp76lFZIbTMxv0nq0Baftqy7FUgCLQ41l
      AlkcaiwFsDjUWApgcaixFMDiUGOFQ1scOpanh1gz8mgucVkKYHH4cNokbl3vxHUqzzKBLA4f
      /vI64uEluvrGLAWwOHxIspOTJTZuTKctR5jF4SSTiBLJCEsBLA43lglkcaj5/83jB/TUuWBs
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='1960-80 mortality decrease' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29949c17bf+Tmhcuqcc2Az56Csqxt037uw/Wz4Nxv+E2zAPzwDBmzYhgfw
      YB4wgxljYEwEjEmeN3iGff2kG0SKpMQcukk2O+fcXd2Vc52zz54fqiXdS0mURB6q2V3n85NC
      1eI+m7XO3nt9115LkVJKHByqFHWvB+DgsJc4DuBQ1TgO4FDVOA7gUNU4DuBQ1TgO4FDVOA7g
      UNU4DuBQ1TgO4FDVOA7gUNU4DvAMlmVhd3aIEOKV2LQTKaXtNi3LwrIs223aOZe6bZYOCFJK
      pqLjlEXZNpumaaLpOoptFis2dd2+vz5JxQF0zT6blmUhAU217z0rhEBVVRTFntk8sA5gCUGx
      WER3uTFMk4Dfh7QshJTomvbc7/6vt/8dG5m1H2mkDnvJAXUAye3Pf4/QQjQ2NrO1s0FPVx8t
      tT5W4iattV7i8Ti1ze1Y+RSpXJn2jjY01c53tMN+4ICeAUwsK8x7777DQGcjmXic6NwTNnMl
      4uk8927eIl3IMfxwlHQqxdbqDFMLO3s9aIc94IA6gEqumMYUFsK0aOkeoKu5AcOyMIWF31/L
      kSOHcBlZRp+OE0unKRXt2/M77B8O6BZI4+ihTq5evUpXzyANtRF8uh/F50epdYEXFDQaW1pQ
      FcgYRWpq/Hs9aIc9QDm4N8IkXzzZ8yIGXzz+F58RQvBfX/6XRHNb9o1EShQU7AwDSSlti4RU
      DFYiQXba/Gr+bTOJlLvTaJPNA+wAL4YQAkVRUG0M3RmGga7rtv64yuUybrfbNntSSkzTxOVy
      2WbzC/3DznCtaZqoqmrb388B3QK9HLlyDrDvvWCYBrpw2aoDGIaBy7LvxyqRmKbAJWzWAaRE
      M58fdv4hmMJEVTVUm14mB3YFsCwB/PA3uRCCf/Lrf+ToAFXCgVwBCok1PvlsBFWzuPjehzQE
      XViWRFVN5ma36R9oBymxJGiaipTSdsXSYX9wIB1g7Ok8H/zqTwmYO9x4uEBzKM/88gpN7d08
      HhnHcr1PaWeF5fVtjh07xK0HYwydOMv5Y717PXSHH5mD+cqTFkKCtAQWglgyicvvRkgPg4dO
      cKizgXgqi+pSyabTNPefcH78VcqBdIDjJ/u59vHH/L9/dZmegVaKeQNRLuPyR7Byq0wuLFMq
      mAjTwOX10VhTs9dDdtgjDvQhOBvfJm15aWsIUzkQK0jLQioKSAtQUZ/J/3EOwdXFgXWAF0UI
      Qd7IY3sYVH8FYVAbY/ZfhkFtjNl/GQb9juzbH4ITBn3FOEKYI4QdCJ5Ncfgh/JtP/oWTCmGH
      yX2QCrHvHaCY2ODq3VHcLhenLlyiIVxJajNySeajGQ73dX3L99bZsWroqP96Elw8H2c7G32l
      43Z4Pdj3DmDmE+j1XTRbUdZ3ksw/uc1m0uT9t08zcucacxN1nD19isejozS2dpOOrSPUAO+e
      7SadSPLJ/cuUDYWTb3xAZ2Nwrx/H4Udm/4dBFYX1uQlWtxPoKgg0SK2xHC8zdPpNTnY3kswk
      CTT1cqyvFTSd1OYSqVyWRDqPr2mAd948QzKa2usncdgD9r0DKIqK7nKjqwrFYobV1S08bs/u
      HnF3T2up1DQ0kIiuUyia6LoLqVQeXpUSOyM+DvuLfR8FkpZFqVwGRcHtdlPK51E0DZfbDRIU
      Knk+KAoqkM/n0d0eXLq2e0iTqKqCZVXyghwdoLrY9w5gN0IIprcnnLIoNrAfyqI4DvAMjg7g
      6ABVz/9x/38nWYzbZq+Sim1vyRXLsmx10opNe8f5MlrM820qtmkL3+4AUrKxvkVzWxML80v0
      9//AbElpMfX0EZvJEqfPnSPi/35vq9EHN4nl4NT589QGPM/9bD4bJ5FRaW+tJLNZZp759TgD
      XR1ffqZUSHHv7gi+2mbOnjz8vST0J+sjzhmgSnjOCiBZnFlkY+kxwc4LzIyNsBLNcOb8KTYX
      18iWBV6lQKIA588c4eH9YXyRZs6eGtr9kVnE4hYXzh/h8tVrvPvGCUYejdM1dAKRWGJ9O4PH
      48HSfbxx4Qz67ptnaSvJhz97h0+u3eJobz2L60nOXLjA/NgwWeHmxEALj8bmCNQ2MdgWJBFX
      ia9PkixrDDZ6KLs7ePLgLjnh4cLF0xSzKWoaB/CV5hidq6WwOYUWaqa1RmdhaY1wYycnD/fZ
      qlY67B+eu4ZmU+s8XSgy0KSxHBOcPdrD9MwE9x9N098VYXR2jWxsicWNKJZhMPr0MWXzq2Ko
      CuAJRGj16dy6dw+338PI8ANW4xlO9DSi1XUSkjlyxlfHkOz2Gteu3qStrZmRsSlUJctnn/ye
      oreB9hqN6aej1PSfRiS3yRUNrEKUJ3ObJDfnSLiaONzmYX5pDa/ftxsJtXhy/zoPJ+Oo+VU2
      0iVWph8zObvBsTMXSG3NUxL2FnB12D889wwQqmnnyDE3nz+ewzAyxBI6iqbT33eImnAQfzBE
      b28bnsw6Rm0HjeUSRjFHoaBSG/JSLOZYWZwlKlzUBgME65poau5kc3Mdj8uF3xVAzesYuQSx
      gp/6Gh/Bpk5+9uGHqNJgY32JprZe2pqKLMdSpPQCuu4in02QzRtomoqi6viDIfp7DtHSUIOi
      qJw7f46JkQds9/bjU1ROnn2DtdVJikWTcDBCe18vic0oqeQOJaFSziYoaQEiIe+PNe8Orwnf
      HgWSklQqQ7gmzM5WFE0x2IjnGOjvoZA3qIkE2N5YYTtdoruzhcWFJXyhCEpmC6VpgJ6GMJvr
      K6RyZbp7e3HJElOzi0QaWgl6VIJeF0XpAiOPgkXJ8lIb8RGPx6mrqwMgFdtiNZqgs7uHTHSF
      vHBTJ6Lc39E5NdhDQ8RHyVDIpTaJZQz6+nrxaLC8uIAh3fT1dWEZRYqGgs9lsZPOU0zEMHUf
      OyuLeOrq6Ozoxq+WMdQA4aDH0QGqDNvDoEIIVE2zNeb9R/aLecqaF5/r5SIguWwGXyD4tUOx
      EIIrM78jV86+lP1nbaqqZus5Qwhha569lBLLsmy3KaW0NVplWRaKojg6wKvC0QEcHaDquTZ7
      2eYVwELT7I3Z270CAAjLslW1rawA2Kot2L0CHAgHsITJ6tIiZQv84Tramuq+8TOpdJ7a2nDl
      P0iDWKpAfU34a5/9aOw/O2eAKmHfZ4MCoCi4NJOxsRU0BIl0lnIpTz6fZ3Fmhtt3H1IyTFLp
      NJuLM9wffkrZNEilcqwtTHPv/mPKwtkJViMHwgFUVaO1o4OGukYaQgrjs+sktzdZWVll+Okq
      9W6L9ViCrZ11Rh6NURv2YRk51lbSGEIiS9uMTW/u9WM47AEHwgGeRUqLUimPRNLc2ELA66vc
      yUXl1PkzrCxMs5MsoBg5JmdX0NxusLmbocP+4ECcAQBQPfT2taB6IvhKUyxsqhw9ephg0CLs
      BeH2EtA72FldRA80UF9fD4N+kusGO8Uyh/sie/0EDnuAEwZ9BiEE//7e/0KiYGM2qLRQFNVW
      bcSSFqpiY8SG3Zi9zTaR9maDVuZS2V3RXx7HAZ7B0QEcHaDqmd2ZxrDzRpgQ39mb+AfbtPlG
      GNg/TktKsFkJFpaF6ugA380XNf9VpXLRQ5RLSJcXt/bdE/c/3fy3jg5QJRxYB0hHN1hNljk2
      1M3C9Cx6eZsNvZ3DnU24FAt/MEg+l0OUi2TyBi2tzU6j7CrkwDpApdRJ5fpcoRDHi0Umm+T6
      3CzNEcnQ2Us8vD/OYGcdmxurpEs6R/oa9nrQDj8yB1IH+BJZ2QoJIVFUF/1HjhDy6vT2dHPj
      Nx/TeWiA8ckpkvkcxUJpr0frsAcc2BXA7fOy+WiUvGHQUteASxUM3/+MusYumtq7yIgx+ptD
      xAMhMkaRSMRplF2NVFEY9KvG2evzk8SsICcGOvmiKtwfNsr+r37/z4lm7UuNkLtbMTtPGBJp
      q0X5xTxUmc0qcoDvh6MDODpA1VMyi7bW8jcME5fU7bVpGgjFtM2elJUfl4lhm81KhxjQpH0v
      E9MUaKqKYlPEbk8dQJgGUtHQd3v1wrfJ5hLTtNB1e8Wkb+OfffTnjg5QJdjimk8eP0JKydj4
      U8qG+PK/52I7bMZSzC0ufeP3tuceMrmeAyC6MsOvP77BN+7IRJ6RkZmv/t0qc+Xj33L16jXW
      tpNf+/jc7ExFhXyGcibGWswpg+7wFbasALl85Uecy+WILj/hxuMVVOnmV+8eZn0rzb3bd8m8
      +zNy65PE00UOn3+b+Ue3SaViHH7vKFJKVlc28LoFBbPI57+9QlkP0tXkZ2VllUOnLzI/PcLG
      2iRHL77LQEsAqXjo7u4mIBP8h//vMpQKhOrr8UfaiHgtdjYWuHp9mN4jx8hHl4jlVI53uLgz
      F+fc8UMsLiyDO0BzyCKaMjlz/k3aGkN2TIfDPsKWFUDsvvWltLBQOXPxA3oaajGFhRao4/jJ
      05w+0sXi3BrhUICNxUXqu47x1ukhLAnSKjM7s4CR3uTx3A7SFeFPfvEWhVwWb9BDKp6ms/sE
      P3/7HOn07hvcqlQxsCyTrsOXOHl0kLfe/zk+rUixXEaYgt4jZznWXUPRUikV8jR39nDm4pv4
      lAym5kFXy9TUN6KpEoF4zhM6HFRscYCmsM4nV6+ykxJ4PZV8G7fPjaq58LndkN3h8eQSfQNt
      CAXauzrYXpni4fgSHrdKIbbC4KU/4U/+7O8ionM01tejKZJspoRZLqO7PcSi81y795iG+npA
      wbIKrKyskC2a+Fwabo8XTVHweDz4PB503UNjbRizXKBYEEgF3H4/ixOPKYggmmLi8YZ3oz6Q
      SefsmAqHfYZtYVDTMCo18L/hEPtFfRhFUSpVjTUNaVl80bz62/jD+vIvXmNGIoT1ZU15S1go
      qoqUopKjr4AprC+zIJ3CWNWFowM8gxCCTCmNhX1XJE1jN3XZxjCoaZjoLhuDeLLShNrWphu7
      YVDVxpIwwhSomtMg45XhCGGOEPZa8H2aK3zTZ573ve/bsOG/ufKv2c7Z1yfY9qbWr8RmJVXE
      bpuVLBB7G2QoNnbKfi0doJyNc/veCIo3whsXz+LWv9nbRSnL8MQC9eEA/f39AERXpljKeLlw
      rOdrU1SMb7BWdDPQ3gBWkbm1OP2dbV+zu52NOmeAKuG1dID4yjwy3MLF4/0UYqtcfTROXVs/
      7QFBsP0QG/OTeCnydG6VvF5L0FNZtqWULMytkyhDubuWu/du467pRC/H2d7JcfpkP3dv3mS2
      rp73fnKeUk4w9vAuq1sJTr3xPi11vj1+cocfm9fyPkDz4bN0eEt89PEVMkUD1e1mbmaKbDpJ
      WUhiiSjz6xl++pN3CHs1YsmKGmyZeRY2ouTja2ymMxiqn/MnB1ElYCZYWM9x/NJbDHXVsbUZ
      I7GdxVIkFiU2NuyrAuGwf3gtHWBnfYntnMDtUpmfmsTjC+JyubBEiaeP7hNNGehWgZFHT8gU
      xZdbndjcBP1n3+ODD95g8tEctU0tYBRZjSXwezVUVWF5ZoLJ+Q3CER9SFFhY2sHj1p1W2VXK
      axkFsoRJLp9H0z14dIVsroDH50NXJblCCY/HW/nnXAmPz4emgsvlQhgGiq6jKlAulVE1HU1T
      yWczWIqK1+ulWMij6h78XhemaWGUCphSwe/zo+tOo+xq47V0gL1ECMH41lNKomifTXO3lLmd
      DTJMgWZndqzcLbluo01p7YqXNuoAFSHTaZDxynB0AEcHqHr+n4f/nmTx62nWL8qraWptt02J
      ZXdpxFfSKNvatXeAdQA7WFtdoqmtmxdpJTa8+sA5A1QJB9YBZibHcPn9TD4Zo6V7CK9MsbS6
      RVPXIGFyTM2vcez0GTYWJ4mlipy68CZ1Qfu2FA77g9cyDGoPEmGaoFqMPp5gdXmLk+cvsDw3
      jmkaINM8ejzDVk5y7FA7q8vbez1ghz3gwDmAlIJEIkap7GJxeprGlg68Hh1FKuQyCSxFZ2J6
      ia7uDlTLwu8P4fF4UJxQQFVy8LZAlsXW+jrHz1+gxm0xu7TGiZNHWJl8wlY0zsULFzGSUbbS
      WU6e7sela/h9Gj1epy5oNVI1YdB0KkUwEvnOJU8Iwe+nPiJTytj2Z++PKJD9Nl9FFMjuMVaN
      A3xfHB3A0QGqns/nr5E37LsjLIRAU21Wgu1ulC1lpVG2jTalJZHY2yDDbiX4QDmAlJJcPk8w
      EPiWDxhsb2dpbKp9rp1fj/6VowNUCQcrCiQtHo0+xcinuXvnHsl8iUQqwfLSIvlMivt3bvHg
      yTzxrVXu3n1IoVRmfXmee/dHKBhOm9Rq5GA5AJUalzdufEZPXwe3bt3n5qcfsZUR3Lj1GZ39
      A/hcOqVimYA7x607T3k4OU9LnYuZWadRdjVyYBygUjZFUC6VsEyN2poIXkUSbOrjwvF+3G4/
      DTVBQDI+OQW6jjRNautbiYQjKJYTC6hGDswZwCykeTjyhN5Dx6lV09y5/ZDBo8dB5AE40t/B
      rdvDNLYN4inCRipFb18PHq8Lb8BDc5OjA1QjThj0GZz7AM59gKrG0QEcHaDqce4D2GTRuQ9Q
      wSzlmFxY49jQIIXkFhtpSX936w+ysTwzzux6nDPnzuNXyiwsxxk60s3S5ChL0RSHT5yhuTb4
      5edziSgPRp7S0X8EXZN0d7Rh5JJsZiw6W+qe+2c59wGqhx/FAYxsnN//5hPae/uZHxslZoTQ
      ijGWN5KcvHCR2OI4mzlJd3OYmYU1Dh8/jUyvMbG4xYlzF2n0GzwcW+WXH74Nqsrq7DjDMwm6
      BzrY2c5y8cIZrl99wIe/+sluWMvis1t3+Mkv/hQjE+fazRvMzzZy/sJppBTMTj5lY2ubtv7j
      KJkNVqMZTl+4SNhv3/LvsD/4ccKgUnL01ABPR8bIyxAhXcE0TYqFbSbHxpneMjl7YghFmFDO
      MDw2zdPJBd44f4THjydQXCFODTRx5cqnxLJFZqZXaXYbLG5nyaV2+O1H/4lQS8sfLIom4UAj
      PrcLn9dLbUM7/XUam8k0K1tJ1le2OXXhHOtzc5imSS4bZW7RuQ9Qjfw4DqBI3ME2Eksj1LW1
      I80iM8s7tLe3oqBiWQWy2Rzjs3P09HTg1jVULNKpJJqmYxklCNRyvK+drdUZTHcTA0eHWJ6Y
      IFjTwLmzp8kkU2QTMTJFE3CRzUdZ3dgkkcrhDQRxu1ygVHaObrefgN+LJvLMrSZpb2sGJxZQ
      lfwoUSBhFMkUBbKYw1dTRzGTJZfcIVEs09HZRzkbJZYpURfyshVL0dzaiY88CyvbDBw5it+l
      sDQ3Q85S6WltxNCD1Phd7MR2cGsugpEwsegWs2OTHH7rHWq9OoVsktn5ZRrbuvC5NbyqhdA9
      lMsWmGUidWFS8TSZ+DapsklnVx+RoMepC1RlHKgwqGm+fH175z7A6x0Fcu4DvGIcHcDRAaoe
      5z6ATSar6z6AJLG9RTJXorWtA6/7mYmUJolMgdrwt7cilaLMRjxLW+PX4/RSSmLx+G6TvAo7
      m2vkSoKm1jZ87uc/ijCKpHOC2poAZilPumihYRIM16A9M5fOfYDqwTbXLGfj3B4ZwyyXSMdj
      JHNFSrkM8e1tolsbbMXjxBNZ1pdmGR4ZwxAGq4sL3HswQnG3zWp05imfXLlBQcgv8/g3V5e4
      ++AxxXKZh/duc+/+CCVR2bV9fuMG5WKGG7fvkY5tcPfeI8pmmcWZSR48mcC0DOLJLMVshlRq
      i5vXb/FkcgEjk2Bxc5tEIo60DEaHH7AZt2/P77B/sM0BXL4QIbfJ3PIWbq/C3ZvDTI0/YXX2
      Eb+/9ZSgV7KxmqZcFpSzG0xML3JveI5al2R1OwFIni7vcHawjoWVGLc+/YhoRlAul/EYce6O
      LaG63PR1Brl5+ykAljDY2t5CdXm4dfchYX+BG7fuM7Eap04vMjk1xfjTFWLLS0TTeXzhOmR0
      kpVspTXqxlKUJw/uote04tWdbNBqxDYHkFLh9IV3OdVTy8xSiogrzWJc0FQT4dL77xPw6FDO
      MTG7DJqGFILmpjbCAT+qAqKQJJ03KJZN1taWCTX3cf54P7MzU7hcKtK08AYihIIhNKuyYuje
      ALooU1cbplguUFYCdDSHCUfq8Xk8u3cETMrlMlIq1ETq8XndWLuXv1QJZWlRX19H0O+1ayoc
      9hE2xrwspkaHmdnIcHiom+6uJmqb2wk3dlDv00D10z3QQVttkIKh0dzcSFd3I4G6JmqDAcpl
      eOvdd7jwxrscaq2np7MLgPb2VrZzFt3t9UQ8Fjfvz3Du0nEATpw4xaV3f4HfLHL61El2onG8
      /iCr82PMbhYYHDyCX91hMZGjobaBTGyWuNZEX0st7Y11dPR1cvrECcZGbrMcdTrEVCOvJgwq
      DZ48GefQsRN4v6XB3atCGgXW4gU6mp+f8PZtCCH43+78O+KFmH1j2hddIl+BTQkSe23aPUZH
      B3gGRwdwdICqZzE+j2EZttkzTRNds7lTvA2q9x8h5e6NMLs7xUtUG7UFIQSqal+n+H3jAFJK
      LEuiaeru4RZU9fmTIIRAVaBUFni93/9t+T9+/t85OkCV8HIOIC3u3nzI+XcuMH77Fr0X36Cw
      s4XbHyHgUUmkUuieIJGAm+3oDr5QhHDQz/jtWzQfO8LtW8N8+LO3iW3HqWtsxioXSKUzROoa
      UK0S8WSGuoYm3GqZj/7693gDQY6cuYCWXuY3N+b5B3//b3Dz419T9vjAXc/P3z+/+5KV3Pns
      d2RKOi2tnSQyMQb7Bqn1wVJc0NUYJJ1OE6prxCpmyRZNGpsa0GzeUzu8/rz0CpCKb3Dj88+J
      r2/jrXvC8naJYj7DkSYfc1k3opilK6SSVCMUcrP87CfvYhaz/PY3l/nph3/KyJ3PUf21PF3c
      xJNexl/byHIsTWZ+gmDYT8w4y7GOED5UvOF6GiNBHo/HGOqtI5Er4fYFae1qZ3YuhuSLXYZJ
      2Qjyi1+8g5FP8vHvRpnLxug8cY5UpsSdiWHCrc3kFjbpbPCzsbFGMn+Kw70NLzsdDvuMlz5J
      BMMNnL9wge7WRnZiBU6ePkVj0E3ZkAycOE044CKTszh+/DCuXbFJc/sZ6m1lfSNK2fRx6tRJ
      lGIGd6SRY4cG0ZQSireBga5WKiF7nbd/+SEdIcHj6VnmZxdIp6I8nlgGSzI//pC2wX6wBMKS
      gEqhnENYFpYpaes7zEB7M2XLwhAWPn89p0+fQC9lmZ6ZJVPMU8iXXnYqHPYhL70C1Dc24PN6
      qW9sINxUy50bn+EN1tPbFETqCg11DdT4dIbv3SNdrBwsww2N9A4M8PTBfZqaQnz66XVau4bw
      KTk0t4facAPeQo77TyZoPt2MFCUe3rlD0ZL0d3kJfvBnHOmJ8GjkCaHObs4NvM/w3QeMrM3S
      cuoS7RE3g73NXLnyKZ09g9SGQ3hdHqTXixXRwFWLgkpdQwNyW5AzioRDvpeeTIf9h+1hUGlZ
      oPxhtp5keWqc2dUN2nqOcri/7dlvYFnPZgxaPLx5k2SuzJm336Eu4PleueXbW1Eampu+PAd8
      8WTP+86zdoUQ/Kvf/lM2sxvf+5m/k6/2Zo7N18yeowM8g6MDODpA1WNaJoq078dqCsP229em
      ZaIIe1+tpjBtHae1qwNIYd871hQmGpptfz9V6QCmaaCq+rfqCP/0v/xjRweoEg5MdehvYnZ8
      kmzx64ru7NN7bCRSzC47P/Jq50CvAIVsgVIuxdW//gQLldPvfMDovdvEkwk+aOsnuVPkafQO
      i6ubHLv0U3pbw3s9ZIcfmQPtAFC5l9p66AQdep7JxVUOnXmL4vpTpBQUs0UMCrh8Oql4BhwH
      qDoO9BbI7XWhaSouXUdzuWlprmfq8UPG5zfQNA23W5JK5hFGGc114N8FDt9A1YVBLUugKBpf
      RCQtSyBR0dSvdACnMFb1UHUO8F0IIUgU4ljSvqZ5tqcuU4lk6bqdxXwlpilsHaclK2FQTX19
      06EdB3gGRwhzhLCq57+9+m/YzkVts7cvri+ye33R9lwIu7E3F+LgOYAsc+fz2xSERe/hk/S0
      VgppSWEwOjVPXchNQ3sv3ue8QDbS684ZoEo4eA5gmRiEOD4QYHRxleLWLPPrcU5fuEQ6k8Wn
      BCllojx4/JSk4WeoUWNuPc6Rs5fobqrZ69E7/MgcvDCoAvGNJR6Nz+HSVZ48miDsVZiZq2R3
      JrYS+MIN1HoUBgZ7eDK1gM/rYnlldY8H7rAXHDwHAHS3l5qaMEbJpKE5gjsQoqerobJzVCC1
      vcy96SiyXKA+GMTtDtDW3LzXw3bYAw5eFEhKstkMppD4g0EUUSKdzRMK14C0QIKqKWSzOVTd
      jc+lks7kCIYjeNy6owNUGQfPAV4SIQSjG48omjY2yra7lDkghImm2XmEkwhhc3l0ae1W77Cx
      PLolUBRHB3hlODqAowNUPX858n+RKtncKFtRbb3KZ3uLJFlRbm1vkSRB+Y76TT/IprWrf9hk
      8sA4QCGTwtQ8WPkUeCNEgt9d7XlnbQ1/UzOqsP6ocNb95TvOGaBKODAOkN7aJKFozE7M8+6l
      E8S1RozEFoVCmbb2emaXY7TWBbAsi7GJSVq6D1HvEcQ3Zrn86Rg//eX7dLU6dYGqjQMTBlUU
      i+Hrv6Nt6DQyuc5mxmB1ZZFMbJkHows8ejrJwvQUhiWRqsrD+/dJRtdQgnV09wzQ2li714/g
      sAccGAeQqFz8+d9ma/I+qZJJNp0gmc7R2tPHxNg0p9ojzMYlG7Nj1LZ2EvR7ABVV9yJKGUwh
      9voRHPaAA7MFqmnpIKi5aP3JmxQNi8TyCm29h6ipa+FXv3iHhoYQtRmDOo9kYmaJ4ydP0Rzx
      oQVCDPbVEUvn6Gi0L6risD9wwqDPIITg44lfkymlbbNpWQLVxpx4AEsIW8uOf3OBspe0KCVI
      iWKrDmChKPa1SXUc4BkcHcDRAaqe24ufkzfyttmz/239atRlu8f5qlYAVVHgoDTIMEtFciVB
      OOihUBL4fZ7nfl4Kg/W1DTzhWuprQiiAtASxZJqGuj+O5Bj5JCnDQ0PkGwrfSjPSTmwAAAq0
      SURBVJNUtkQkFPja//qPj//S0QGqhD2PAsXXFvjLv/oNRinJo6llCpk4Dx48IlsokMrkSO1E
      KRiCRLzSS/jBnetEU1mymRzrSzM8GZ9GCIPx6TlK2SQPhx+RL5ukY5vc+ewyo0sx1hanGZte
      QJQKLM5NMTo5h7AMtmMptlYWePxkAsNydoLVyJ6vANJSOH+imTujC2iuGu7cvkVrZws3bj7A
      5/NiJBao7zxCKmvxk7fDlA0f548fQVEU5qcTJFdmmQuFUBWFz659Rkd3O/dGJihsLnC4r4XJ
      1BbjsRLNgQJPCjli6Tz1Wo5ELszmWgZXs0Ipvc74TC2nhlr2ejocfmT2fAUACLcNIbbnyRuC
      XCFL3tDp7mlHz23iCvWyNjFCS2croFIsJsmWTMrFNE/GZ3ApklzZBCSZVJqSUGmtdaP56qkJ
      +BCmSTBUR1MkRKFg0tDeTtDvQwIYecZnFhAKWKajA1Qje74CBOoacbt8NFx8h/WMRl3rBUZn
      lukb6qB3aBAZbCdd66OjqRZQePOti9y59TkNHX10NobJmxq99RHKHo2htgijM0v0t3TR0ZRi
      eC7O4eNnSS9NMh51celUFxlTx+3vwOvx09nbRmK9SKJUorvRqQpXjThh0GcQQvA/3/q3xOxs
      lG1ZKDZng0rLsjW6gpSVShN22+T5DUp+uEm5e7PP0QFeCY4O4OgAVc9KchnTxkbZwhRour0x
      +1dRbc7ucUpLIrFXXa7ORtlSIqRE+4OJNMpldJfrpSaiVCrj8Xz9Lfo/XP8LRweoEl6LKNDz
      EEaRyx/9F65d+5S1nSyx7SjZfIlHjx6wtr5FoWRgmWWiW1FKhokURT755HMsKbn12XUKxTLb
      0SjFskmpVCKdTGEYZXa217l/exijVCAa3cF0dICq5LVfAYqZbUKtx7h0rp9iNsXE1Aprm2PU
      hQxW15YZm5yn0WdS1Nzkpxb4+XuXCKolkpkEJfwsjT8gZuiUzAXKO+vIYBMRtYgWDlIUFvdv
      3UDz+lmLt3LmcN9eP67Dj8xrvwIoLhelUg4pLeLRNda3E+RyOVR/DSdPniKkmiQMhUsXLuKi
      Usnh5NF2rn32mMaWNjY2N8nmC7jdbvyhZn7+kzcoK24unD2DX7dY3domVyjZvp922B+89g7g
      CzQQkHE+vXqVRAE0SxKKhAh7FG5+/hn+pg4G20N88uknBOrbAQi0HiIgtunqbuXY0eMoZROf
      N0BjUwOaqtJS6+Lyp9dRQ/WcPDQAQsHn+e47xA4Hj/0RBv0yngzWblUARVG+qpAsJZaUu/Vi
      vvjKF9WTJdKSf9S8W/5BzFt5Jg9eCME///jP2czY2Ch733Sgpups7g8H+BFxdIDq0gFe+y2Q
      g8Or5ECe/KS0gD++NvdDLpD8+X/+h44OUCUcsBVAsjw1yu8vf8rNe4/4wy5fI0+e7NmoHF5f
      DtQKIC2L6aUt3n7rIrmsQXprlXvDT3CF2ynHZvnd5hqR1iFEbJpYukj/6QvMj94HqXH0/Af0
      t0f2+hEcfmQO2AoAiqYhykXu3n5AOptB83lIxZN4Gzv45Z9+SGFnlaIM8Lf+7EPWp6eobT/C
      e2+fI5/M7vXQHfaAg+UAikpr2M3th4+xXBqJeAJRFkgFrHyCy7+7TLCpE5eZ4pPffkpzdx8e
      XUVRVHT9YE2Fw/fjQG2BFEXh6IW3OWwJUFRUhS97334R+1dVFXmir1ILX9e/jCaH6/d06A57
      hKMDPIMQgp1cFCHtuyL5KlKXDdPEZXvzbXvHaVmVl46mvb7p0I4DPIMjhFWXEHagtkBSSizr
      5dv8/PfX/4JYftumUe0WiFLsbUFtSVkpEGUTkt1mFjZfX4TX2+YrdYBcdJ6/ujJMrd/N8Utv
      E9YsXL4gAa9GKplG8wbwezRUzYUwDbBMkuk8tXW1uHSF3/7f/ydtb/4Sb3GD2rbDeGQeS/Xg
      92jobjeFfAmvW8NSNVQzz+8uX8Pr89Hae4y+tjo8bhdlw2B+aYm+7m6y2Syay0fQpxOLJalp
      aMDMZ8mXTOrqa7/8Qa0mlx0hrEp4tSuAZVHf1kO7nicd32Y7m2VzO865I008XshhZdP0DLbR
      2jHE/Pg4ra1h1tbWmfE18/aZQRo7e1maekJvZz1Gfod7j6aRokh3ay3hhlYu3xjlnZMdhNoH
      0RNr9Bw9h6u4je71MPL4MW+cHWJkZB3FKhEzR3i8JbGMAh0hjYLqo7y8TnvIxdr6Ok19Zxnq
      qZyEj7WcpC3c8UqnxuH14JWeAaQlKre0LAu3x4OqKBimgaaqSDSwDKSioqkaQpjoLhdYAkNI
      3C4N0zArS71ayfK0pIoizUpaqARTWGiaWumWKC0kCka5iKK5URWJS9cwzIoerCkSqepYwgQp
      0d1uTMPA5dKxhIUlQdc1xG6fADvPAKZpommarVsBuw+sUkqEEDYfgitz/zrfCXYOwc/wKg7B
      r8IBDMOw9cD6qhygEgWy76K93X8/jgM8w344uH1hcz+M8XW36TiAQ1Xj6P/fgJQGdz+7wuTi
      Bi/7dsildvj8+nWGx+dsGVt8c4XNWAopBeOP7nF/dOql7FlmienpGYSEnfUFrl+/ztTi6osb
      lJKNpWmuXPmUWLbEztoCVz+/Qa78EsKitFiYGuXaZzfJFE1mx0a4fv06Wy+RvyVFiXu3Pncc
      4JtYGL5FZOgCa5NPKQvru7/wHNaXZ6jvOsyJod6XH5hVZHxinq3NHTLRZeLFCMH8MvPx0gub
      XF1eZHFmGVNKlmbnGTh2moGuthe2J5EIPcjbF48yfOcuw09WOXu4mwePn764TWHiCjdztKeB
      ialZFlZ3OH/+Ao3hr/d2+P4oHDl5znGAb2I7LWhvCFMTCiNesl5QTU0TqfVprl679dKrCaqX
      UyeGUBUQRp6alhbaO1uJx1+8m01X3yANkUq17EhjE4vjj7h9/8V/rIqiEnILfvPpMKdPDxFo
      rCcUroGXeJEouhu3meD26CpHBrupqwlz99pVZtd2Xtym5mZjYcxxgG+iqynA+OQcm8kULvVl
      DlsSS3HTM3iIci7Ly60lYJllEokE6VQK6Q6xMTfF+MQi7S2hF7aZTadIZ7KkM1lcXj+DhwaI
      xbZe2J60BNdv3OHMuTN43G5y0Q0WFxdwe1+86oYoprn+YJLzZ4+jiCLhhhY62+vYSb34Fiif
      TuKv63Ac4JtoOXqeGivNqfPn0V8qkUvBH/QR3djk/Ntv87LBQMsokS1bREJu9FAzh3oi1PWd
      pjX44qHLdCJOQ2cb2XSGoM/FxtYO77//3osPUlE4deI42WSMTEFw6dJxMmWVM8eGXtyk7uXM
      0UESsW3yhoJbFii66zl3uOuFbbo9btLJHScK5FDdOCuAQ1XjOIBDVeM4gENV4ziAQ1VzoC7E
      ODgAJNdn+I8fX6emtZdfffgBXte3v+cdB3A4cGQ2VtBbjlJeucf9+14e3bpP/7m3iBibDM9v
      89P3znD5oyu88cu/5YRBHQ4eK8Of8hf/4Qr1jS0M1lisGgFSyTxDoTwdb/4dkuNXOPLzv4dv
      855zBnA4eEgL3v+bf49/8ef/kGO9XaiqzqUzp3CHwxw+3E9bYy3Xf/PXbJQ8zgrgcPAwSwXK
      UsPvdSMtk/W1Ndz+GvxuBU8ghGoZbG5uEapvchzAobpxtkAOVc3/D8//kiTkE2wYAAAAAElF
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='1980-2000' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='African mortality rate' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Decrease mortality 1980-2000' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Europe and Australia' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Increase in mortality1980-2000' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Mortality increase 1960-80' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='mortality 1960' width='192'>
      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
      F9AoP5wAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
